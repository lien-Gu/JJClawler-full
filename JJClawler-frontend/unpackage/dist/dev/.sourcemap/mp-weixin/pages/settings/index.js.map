{"version":3,"file":"index.js","sources":["pages/settings/index.vue","pages/settings/index.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"settings-page\">\n    <!-- 用户信息区域 -->\n    <view class=\"user-section\">\n      <view class=\"user-avatar\"></view>\n      <view class=\"login-btn\" @tap=\"handleLogin\">\n        <text class=\"login-text\">login</text>\n      </view>\n    </view>\n    \n    <!-- 分隔线 -->\n    <view class=\"section-divider\"></view>\n    \n    <!-- 设置选项 -->\n    <view class=\"settings-section\">\n      <!-- 自动刷新 -->\n      <view class=\"setting-item\">\n        <text class=\"setting-label\">自动刷新</text>\n        <view class=\"setting-switch\" :class=\"{ active: autoRefresh }\" @tap=\"toggleAutoRefresh\">\n          <view class=\"switch-handle\"></view>\n        </view>\n      </view>\n      \n      <!-- 数据缓存 -->\n      <view class=\"setting-item\">\n        <text class=\"setting-label\">数据缓存</text>\n        <view class=\"setting-switch\" :class=\"{ active: dataCache }\" @tap=\"toggleDataCache\">\n          <view class=\"switch-handle\"></view>\n        </view>\n      </view>\n      \n      <!-- 自动订阅 -->\n      <view class=\"setting-item\">\n        <text class=\"setting-label\">自动订阅</text>\n        <view class=\"setting-switch\" :class=\"{ active: autoSubscribe }\" @tap=\"toggleAutoSubscribe\">\n          <view class=\"switch-handle\"></view>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\n/**\n * 设置页面\n * @description 用户设置和应用配置，按照Figma设计样式\n */\nexport default {\n  name: 'SettingsPage',\n  \n  data() {\n    return {\n      // 用户登录状态\n      isLoggedIn: false,\n      userInfo: null,\n      \n      // 设置选项\n      autoRefresh: true,\n      dataCache: true,\n      autoSubscribe: false\n    }\n  },\n  \n  onLoad() {\n    this.loadSettings()\n  },\n  \n  methods: {\n    /**\n     * 加载设置\n     */\n    loadSettings() {\n      try {\n        // 从本地存储加载设置\n        this.autoRefresh = uni.getStorageSync('autoRefresh') !== false\n        this.dataCache = uni.getStorageSync('dataCache') !== false\n        this.autoSubscribe = uni.getStorageSync('autoSubscribe') === true\n        \n        // 检查登录状态\n        const userInfo = uni.getStorageSync('userInfo')\n        if (userInfo) {\n          this.isLoggedIn = true\n          this.userInfo = userInfo\n        }\n      } catch (error) {\n        console.error('加载设置失败:', error)\n      }\n    },\n    \n    /**\n     * 处理登录\n     */\n    handleLogin() {\n      if (this.isLoggedIn) {\n        // 已登录，显示用户菜单或退出登录\n        this.showUserMenu()\n      } else {\n        // 未登录，跳转到登录页面\n        this.goToLogin()\n      }\n    },\n    \n    /**\n     * 跳转到登录页面\n     */\n    goToLogin() {\n      // 这里可以跳转到登录页面或者调用登录接口\n      uni.showModal({\n        title: '登录',\n        content: '是否要进行登录？',\n        confirmText: '登录',\n        success: (res) => {\n          if (res.confirm) {\n            // 模拟登录成功\n            this.mockLogin()\n          }\n        }\n      })\n    },\n    \n    /**\n     * 模拟登录\n     */\n    mockLogin() {\n      const userInfo = {\n        id: '12345',\n        username: 'user123',\n        avatar: '',\n        loginTime: new Date().toISOString()\n      }\n      \n      this.isLoggedIn = true\n      this.userInfo = userInfo\n      \n      // 保存到本地存储\n      uni.setStorageSync('userInfo', userInfo)\n      \n      uni.showToast({\n        title: '登录成功',\n        icon: 'success',\n        duration: 1500\n      })\n    },\n    \n    /**\n     * 显示用户菜单\n     */\n    showUserMenu() {\n      uni.showActionSheet({\n        itemList: ['退出登录'],\n        success: (res) => {\n          if (res.tapIndex === 0) {\n            this.logout()\n          }\n        }\n      })\n    },\n    \n    /**\n     * 退出登录\n     */\n    logout() {\n      uni.showModal({\n        title: '确认退出',\n        content: '是否要退出登录？',\n        confirmText: '退出',\n        success: (res) => {\n          if (res.confirm) {\n            this.isLoggedIn = false\n            this.userInfo = null\n            \n            // 清除本地存储\n            uni.removeStorageSync('userInfo')\n            \n            uni.showToast({\n              title: '已退出登录',\n              icon: 'success',\n              duration: 1500\n            })\n          }\n        }\n      })\n    },\n    \n    /**\n     * 切换自动刷新\n     */\n    toggleAutoRefresh() {\n      this.autoRefresh = !this.autoRefresh\n      uni.setStorageSync('autoRefresh', this.autoRefresh)\n      \n      uni.showToast({\n        title: this.autoRefresh ? '已开启自动刷新' : '已关闭自动刷新',\n        icon: 'none',\n        duration: 1500\n      })\n    },\n    \n    /**\n     * 切换数据缓存\n     */\n    toggleDataCache() {\n      this.dataCache = !this.dataCache\n      uni.setStorageSync('dataCache', this.dataCache)\n      \n      uni.showToast({\n        title: this.dataCache ? '已开启数据缓存' : '已关闭数据缓存',\n        icon: 'none',\n        duration: 1500\n      })\n    },\n    \n    /**\n     * 切换自动订阅\n     */\n    toggleAutoSubscribe() {\n      this.autoSubscribe = !this.autoSubscribe\n      uni.setStorageSync('autoSubscribe', this.autoSubscribe)\n      \n      uni.showToast({\n        title: this.autoSubscribe ? '已开启自动订阅' : '已关闭自动订阅',\n        icon: 'none',\n        duration: 1500\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.settings-page {\n  min-height: 100vh;\n  background-color: #f4f0eb;\n  padding-bottom: $safe-area-bottom;\n}\n\n.user-section {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 64rpx 32rpx;\n  margin-bottom: 96rpx; // 增加到96rpx，提供更明显的间距\n  background-color: #f4f0eb;\n  \n  .user-avatar {\n    width: 200rpx;\n    height: 200rpx;\n    background-color: #cd853f;  // 橙色圆形头像\n    border-radius: 50%;\n  }\n  \n  .login-btn {\n    background-color: #64a347;  // brand primary\n    border-radius: 32rpx;\n    padding: 16rpx 32rpx;\n    \n    .login-text {\n      font-size: 32rpx;\n      font-weight: 400;\n      color: #ffffff;\n      font-family: 'Inter', sans-serif;\n    }\n    \n    &:active {\n      opacity: 0.8;\n    }\n  }\n}\n\n.settings-section {\n  padding: 32rpx 32rpx 0 32rpx; // 顶部增加32rpx内边距，进一步分离区域\n  \n  .setting-item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background-color: #f4f0eb;\n    padding: 48rpx 0;\n    border-bottom: 2rpx solid #e0e0e0;\n    \n    &:last-child {\n      border-bottom: none;\n    }\n    \n    .setting-label {\n      font-size: 36rpx;\n      font-weight: 400;\n      color: #333333;\n      font-family: 'Inter', sans-serif;\n    }\n    \n    .setting-switch {\n      width: 120rpx;\n      height: 60rpx;\n      background-color: #64a347;  // 默认开启状态为绿色\n      border-radius: 30rpx;\n      position: relative;\n      transition: background-color 0.3s ease;\n      \n      &:not(.active) {\n        background-color: #999999;  // 关闭状态为灰色\n      }\n      \n      .switch-handle {\n        width: 48rpx;\n        height: 48rpx;\n        background-color: #ffffff;\n        border-radius: 50%;\n        position: absolute;\n        top: 6rpx;\n        left: 6rpx;\n        transition: transform 0.3s ease;\n      }\n      \n      &.active .switch-handle {\n        transform: translateX(60rpx);\n      }\n      \n      &:active {\n        opacity: 0.8;\n      }\n    }\n  }\n}\n\n/* 分隔线样式 */\n.section-divider {\n  height: 2rpx;\n  background-color: rgba(0, 0, 0, 0.1);\n  margin: 0 32rpx;\n  opacity: 0.5;\n}\n</style>\n","import MiniProgramPage from '/Users/guliyu/weixin-miniapp/JJClawler-frontend/JJClawler-frontend/pages/settings/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}