{"version":3,"file":"index.js","sources":["pages/ranking/index.vue","pages/ranking/index.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"ranking-container\">\n    <!-- 搜索栏 -->\n    <view class=\"search-section\">\n      <input \n        class=\"search-input\" \n        placeholder=\"搜索榜单或书籍\"\n        v-model=\"searchKeyword\"\n        @input=\"onSearch\"\n      />\n    </view>\n\n\n\n    <!-- 第一层级: 分站选择 - 始终显示 -->\n    <view class=\"level-container\">\n      <scroll-view class=\"site-scroll\" scroll-x=\"true\">\n        <view class=\"site-tabs\">\n          <view \n            class=\"site-tab\"\n            :class=\"{ active: selectedSite === site.id }\"\n            v-for=\"site in sites\" \n            :key=\"site.id\"\n            @tap=\"selectSite(site)\"\n          >\n            {{ site.name }}\n          </view>\n        </view>\n      </scroll-view>\n    </view>\n\n    <!-- 第二层级: 频道选择 - 当选中分站有子频道时显示 -->\n    <view class=\"level-container\" v-if=\"showChannelLevel\">\n      <scroll-view class=\"channel-scroll\" scroll-x=\"true\">\n        <view class=\"channel-tabs\">\n          <view \n            class=\"channel-tab\"\n            :class=\"{ active: selectedChannel === channel.id }\"\n            v-for=\"channel in currentSite.channels\" \n            :key=\"channel.id\"\n            @tap=\"selectChannel(channel)\"\n          >\n            {{ channel.name }}\n          </view>\n        </view>\n      </scroll-view>\n    </view>\n\n    <!-- 第三层级: 内容展示区域 -->\n    <view class=\"content-container\" v-if=\"showContentLevel\">\n      \n      <!-- 夹子榜单：显示书籍列表 -->\n      <view v-if=\"currentSite.type === 'special'\" class=\"book-list-container\">\n        <view class=\"jiazi-header\">\n          <text class=\"jiazi-title\">{{ currentSite.name }}</text>\n          <text class=\"jiazi-count\">共{{ bookList.length }}本</text>\n        </view>\n        <scroll-view class=\"book-list\" scroll-y=\"true\">\n          <view \n            class=\"book-item\"\n            v-for=\"(book, index) in bookList\" \n            :key=\"book.id\"\n          >\n            <view class=\"book-rank\">{{ index + 1 }}</view>\n            <view class=\"book-info\">\n              <view class=\"book-title\">{{ book.title }}</view>\n              <view class=\"book-stats\">\n                <text class=\"stat-item\">\n                  收藏: {{ book.collections }}\n                  <text class=\"change-indicator\" :class=\"book.collectionChange > 0 ? 'up' : 'down'\">\n                    {{ book.collectionChange > 0 ? '↑' : '↓' }}{{ Math.abs(book.collectionChange) }}\n                  </text>\n                </text>\n                <text class=\"stat-item\">\n                  排名变化: \n                  <text class=\"change-indicator\" :class=\"book.rankChange > 0 ? 'down' : 'up'\">\n                    {{ book.rankChange > 0 ? '↓' : '↑' }}{{ Math.abs(book.rankChange) }}\n                  </text>\n                </text>\n              </view>\n            </view>\n          </view>\n        </scroll-view>\n      </view>\n\n      <!-- 普通榜单：显示榜单列表 -->\n      <view v-else class=\"ranking-list-container\">\n        <scroll-view class=\"ranking-list\" scroll-y=\"true\">\n          <view \n            class=\"ranking-card\"\n            v-for=\"ranking in rankingList\" \n            :key=\"ranking.id\"\n            @tap=\"goToRankingDetail(ranking)\"\n          >\n            <view class=\"ranking-title\">{{ ranking.name }}</view>\n            <view class=\"ranking-desc\">{{ ranking.desc }}</view>\n            <view class=\"ranking-stats\">\n              <text class=\"stat-item\">{{ ranking.bookCount }} 本书籍</text>\n              <text class=\"stat-item\">{{ ranking.updateTime }}</text>\n            </view>\n          </view>\n        </scroll-view>\n      </view>\n      \n    </view>\n  </view>\n</template>\n\n<script>\nimport { getSitesList } from '@/data/url.js'\n\nexport default {\n  data() {\n    return {\n      searchKeyword: '',\n      selectedSite: '',\n      selectedChannel: '',\n      currentSite: {},\n      currentChannel: {},\n      sites: [],\n      rankingList: [],\n      bookList: [] // 夹子榜单的书籍列表\n    }\n  },\n  \n  computed: {\n    // 是否显示频道选择层级\n    showChannelLevel() {\n      return this.selectedSite && \n             this.currentSite.type === 'complex' && \n             this.currentSite.channels && \n             this.currentSite.channels.length > 0\n    },\n    \n    // 是否显示内容层级\n    showContentLevel() {\n      if (!this.selectedSite) return false\n      \n      // 夹子：选中即显示书籍列表\n      if (this.currentSite.type === 'special') {\n        return true\n      }\n      \n      // 简单榜单：选中即显示榜单列表\n      if (this.currentSite.type === 'simple') {\n        return true\n      }\n      \n      // 复杂榜单：选中分站即显示分站榜单，选中频道则显示频道榜单\n      if (this.currentSite.type === 'complex') {\n        return true\n      }\n      \n      return false\n    }\n  },\n  \n  onLoad() {\n    this.loadSites()\n  },\n  \n  methods: {\n    /**\n     * 加载分站数据\n     */\n    loadSites() {\n      try {\n        // 从本地数据文件加载\n        this.sites = getSitesList()\n        console.log('分站数据加载成功:', this.sites)\n      } catch (error) {\n        console.error('加载分站数据失败:', error)\n      }\n    },\n    \n    /**\n     * 选择分站\n     */\n    selectSite(site) {\n      this.selectedSite = site.id\n      this.currentSite = site\n      \n      // 清空频道选择\n      this.selectedChannel = ''\n      this.currentChannel = {}\n      \n      // 根据分站类型加载对应内容\n      if (site.type === 'special') {\n        // 夹子：加载书籍列表\n        this.loadBookList(site.id)\n      } else {\n        // 简单榜单和复杂榜单：都加载分站的榜单列表\n        this.loadRankings(site.id)\n      }\n    },\n    \n    /**\n     * 选择频道\n     */\n    selectChannel(channel) {\n      this.selectedChannel = channel.id\n      this.currentChannel = channel\n      \n      // 加载频道对应的榜单\n      this.loadRankings(this.selectedSite, channel.id)\n    },\n    \n\n    \n    /**\n     * 加载榜单数据\n     */\n    async loadRankings(siteId, channelId = '') {\n      try {\n        // 这里应该调用API获取榜单数据\n        // const response = await this.$http.get('/api/rankings', { siteId, channelId })\n        // this.rankingList = response.data\n        \n        console.log('加载榜单数据:', siteId, channelId)\n        \n        // 根据分站和频道生成不同的测试榜单数据\n        this.rankingList = this.generateTestRankings(siteId, channelId)\n      } catch (error) {\n        console.error('加载榜单数据失败:', error)\n      }\n    },\n    \n    /**\n     * 生成测试榜单数据\n     */\n    generateTestRankings(siteId, channelId = '') {\n      const baseRankings = {\n        // 书城榜单\n        index: [\n          { id: 'index_1', name: '书城热门榜', desc: '书城最受欢迎的作品', bookCount: 100, updateTime: '1小时前更新' },\n          { id: 'index_2', name: '书城新书榜', desc: '书城最新发布的作品', bookCount: 80, updateTime: '2小时前更新' },\n          { id: 'index_3', name: '书城完结榜', desc: '书城已完结的优质作品', bookCount: 60, updateTime: '3小时前更新' }\n        ],\n        \n        // 言情分站榜单\n        yq: [\n          { id: 'yq_1', name: '言情总榜', desc: '言情分站综合排行', bookCount: 200, updateTime: '30分钟前更新' },\n          { id: 'yq_2', name: '言情月榜', desc: '本月最受欢迎的言情作品', bookCount: 150, updateTime: '1小时前更新' },\n          { id: 'yq_3', name: '言情新作榜', desc: '最新发布的言情作品', bookCount: 120, updateTime: '2小时前更新' },\n          { id: 'yq_4', name: '言情完结榜', desc: '已完结的优质言情作品', bookCount: 90, updateTime: '4小时前更新' }\n        ],\n        \n        // 纯爱分站榜单\n        ca: [\n          { id: 'ca_1', name: '纯爱总榜', desc: '纯爱分站综合排行', bookCount: 180, updateTime: '45分钟前更新' },\n          { id: 'ca_2', name: '纯爱热门榜', desc: '最受欢迎的纯爱作品', bookCount: 140, updateTime: '1小时前更新' },\n          { id: 'ca_3', name: '纯爱新书榜', desc: '最新发布的纯爱作品', bookCount: 110, updateTime: '2小时前更新' },\n          { id: 'ca_4', name: '纯爱收藏榜', desc: '收藏量最高的纯爱作品', bookCount: 85, updateTime: '3小时前更新' }\n        ],\n        \n        // 衍生分站榜单\n        ys: [\n          { id: 'ys_1', name: '衍生总榜', desc: '衍生分站综合排行', bookCount: 160, updateTime: '20分钟前更新' },\n          { id: 'ys_2', name: '衍生热门榜', desc: '最受欢迎的衍生作品', bookCount: 130, updateTime: '1小时前更新' },\n          { id: 'ys_3', name: '衍生新作榜', desc: '最新发布的衍生作品', bookCount: 100, updateTime: '2小时前更新' }\n        ],\n        \n        // 无CP+分站榜单\n        nocp_plus: [\n          { id: 'nocp_1', name: '无CP+总榜', desc: '无CP+分站综合排行', bookCount: 140, updateTime: '35分钟前更新' },\n          { id: 'nocp_2', name: '无CP+热门榜', desc: '最受欢迎的无CP+作品', bookCount: 110, updateTime: '1小时前更新' },\n          { id: 'nocp_3', name: '无CP+新书榜', desc: '最新发布的无CP+作品', bookCount: 90, updateTime: '3小时前更新' }\n        ],\n        \n        // 百合分站榜单\n        bh: [\n          { id: 'bh_1', name: '百合热门榜', desc: '最受欢迎的百合作品', bookCount: 80, updateTime: '1小时前更新' },\n          { id: 'bh_2', name: '百合新书榜', desc: '最新发布的百合作品', bookCount: 60, updateTime: '2小时前更新' },\n          { id: 'bh_3', name: '百合完结榜', desc: '已完结的优质百合作品', bookCount: 45, updateTime: '4小时前更新' }\n        ]\n      }\n      \n      // 如果有选中频道，生成频道特定榜单\n      if (channelId) {\n        const channelName = this.currentChannel.name || '频道'\n        return [\n          { id: `${channelId}_1`, name: `${channelName}热门榜`, desc: `${channelName}最受欢迎的作品`, bookCount: 80, updateTime: '30分钟前更新' },\n          { id: `${channelId}_2`, name: `${channelName}新书榜`, desc: `${channelName}最新发布的作品`, bookCount: 60, updateTime: '1小时前更新' },\n          { id: `${channelId}_3`, name: `${channelName}完结榜`, desc: `${channelName}已完结的优质作品`, bookCount: 40, updateTime: '2小时前更新' }\n        ]\n      }\n      \n      // 返回分站榜单，如果没有对应分站则返回默认榜单\n      return baseRankings[siteId] || [\n        { id: 'default_1', name: '热门榜单', desc: '当前最受欢迎的作品', bookCount: 50, updateTime: '2小时前更新' },\n        { id: 'default_2', name: '新书榜单', desc: '最新发布的优质作品', bookCount: 30, updateTime: '1小时前更新' },\n        { id: 'default_3', name: '完结榜单', desc: '已完结的优质作品', bookCount: 25, updateTime: '6小时前更新' }\n      ]\n    },\n    \n    /**\n     * 加载夹子书籍列表\n     */\n    async loadBookList(siteId) {\n      try {\n        // 这里应该调用API获取夹子书籍数据\n        // const response = await this.$http.get('/api/jiazi/books')\n        // this.bookList = response.data\n        \n        console.log('加载夹子书籍数据:', siteId)\n        \n        // 临时模拟数据\n        this.bookList = [\n          {\n            id: '1',\n            title: '重生之商业帝国',\n            collections: 15680,\n            collectionChange: 245,  // 正数表示增加\n            rankChange: -2  // 负数表示排名上升，正数表示排名下降\n          },\n          {\n            id: '2',\n            title: '穿越古代当皇后',\n            collections: 12450,\n            collectionChange: -89,\n            rankChange: 1\n          },\n          {\n            id: '3',\n            title: '现代都市修仙录',\n            collections: 11230,\n            collectionChange: 156,\n            rankChange: 0\n          },\n          {\n            id: '4',\n            title: '娱乐圈的那些事',\n            collections: 9870,\n            collectionChange: 78,\n            rankChange: -1\n          },\n          {\n            id: '5',\n            title: '末世重生女配逆袭',\n            collections: 8950,\n            collectionChange: -23,\n            rankChange: 3\n          }\n        ]\n      } catch (error) {\n        console.error('加载夹子书籍数据失败:', error)\n      }\n    },\n    \n    /**\n     * 搜索功能\n     */\n    onSearch() {\n      // 实现搜索逻辑\n      console.log('搜索关键词:', this.searchKeyword)\n    },\n    \n    /**\n     * 跳转到榜单详情\n     */\n    goToRankingDetail(ranking) {\n      uni.navigateTo({\n        url: `/pages/ranking/detail?id=${ranking.id}`\n      })\n    },\n    \n    /**\n     * 跳转到夹子榜单详情\n     */\n    goToJiaziDetail() {\n      uni.navigateTo({\n        url: `/pages/ranking/detail?id=jiazi&type=special`\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.ranking-container {\n  padding: 20rpx;\n}\n\n.search-section {\n  margin-bottom: 30rpx;\n}\n\n.search-input {\n  width: 100%;\n  height: 80rpx;\n  padding: 0 30rpx;\n  border: 2rpx solid #e0e0e0;\n  border-radius: 40rpx;\n  background-color: #f8f8f8;\n  font-size: 28rpx;\n}\n\n\n.level-container {\n  margin-bottom: 30rpx;\n}\n\n.site-scroll, .channel-scroll {\n  white-space: nowrap;\n}\n\n.site-tabs, .channel-tabs {\n  display: flex;\n  padding: 10rpx 0;\n}\n\n.site-tab, .channel-tab {\n  flex-shrink: 0;\n  padding: 20rpx 40rpx;\n  margin-right: 20rpx;\n  background-color: #f0f0f0;\n  border-radius: 50rpx;\n  font-size: 28rpx;\n  color: #333;\n  transition: all 0.3s ease;\n  \n  &.active {\n    background-color: #007aff;\n    color: white;\n    font-weight: bold;\n  }\n}\n\n.ranking-list {\n  height: 1000rpx;\n}\n\n.ranking-card {\n  padding: 30rpx;\n  margin-bottom: 20rpx;\n  background-color: white;\n  border-radius: 20rpx;\n  box-shadow: 0 2rpx 10rpx rgba(0,0,0,0.1);\n}\n\n.ranking-title {\n  font-size: 32rpx;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 10rpx;\n}\n\n.ranking-desc {\n  font-size: 26rpx;\n  color: #666;\n  margin-bottom: 15rpx;\n}\n\n.ranking-stats {\n  display: flex;\n  justify-content: space-between;\n  font-size: 24rpx;\n  color: #999;\n}\n\n/* 夹子书籍列表样式 */\n.book-list-container {\n  margin-top: 20rpx;\n}\n\n.jiazi-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20rpx 0;\n  margin-bottom: 20rpx;\n  border-bottom: 2rpx solid #f0f0f0;\n}\n\n.jiazi-title {\n  font-size: 32rpx;\n  font-weight: bold;\n  color: #333;\n}\n\n.jiazi-count {\n  font-size: 24rpx;\n  color: #999;\n}\n\n.book-list {\n  height: 800rpx;\n}\n\n.book-item {\n  display: flex;\n  align-items: center;\n  padding: 25rpx 20rpx;\n  margin-bottom: 15rpx;\n  background-color: white;\n  border-radius: 15rpx;\n  box-shadow: 0 2rpx 8rpx rgba(0,0,0,0.1);\n}\n\n.book-rank {\n  width: 60rpx;\n  height: 60rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #007aff;\n  color: white;\n  border-radius: 50%;\n  font-size: 24rpx;\n  font-weight: bold;\n  margin-right: 20rpx;\n}\n\n.book-info {\n  flex: 1;\n}\n\n.book-title {\n  font-size: 30rpx;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 10rpx;\n  line-height: 1.4;\n}\n\n.book-stats {\n  display: flex;\n  flex-direction: column;\n  gap: 8rpx;\n}\n\n.stat-item {\n  font-size: 24rpx;\n  color: #666;\n}\n\n.change-indicator {\n  margin-left: 10rpx;\n  font-weight: bold;\n  \n  &.up {\n    color: #ff4d4f; /* 红色表示上升/增加 */\n  }\n  \n  &.down {\n    color: #52c41a; /* 绿色表示下降/减少 */\n  }\n}\n\n/* 内容容器样式 */\n.content-container {\n  margin-top: 20rpx;\n}\n\n.ranking-list-container {\n  margin-top: 20rpx;\n}\n</style> ","import MiniProgramPage from '/Users/guliyu/weixin-miniapp/JJClawler-frontend/JJClawler-frontend/pages/ranking/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["getSitesList","uni"],"mappings":"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"}