{"version":3,"file":"detail.js","sources":["pages/ranking/detail.vue","pages/ranking/detail.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"ranking-detail-page\">\n    <!-- 榜单头部信息 -->\n    <view class=\"ranking-header\">\n      <view class=\"header-bg\"></view>\n      <view class=\"header-content\">\n        <view class=\"ranking-info\">\n          <text class=\"ranking-title\">{{ rankingData.name || '榜单详情' }}</text>\n          <text class=\"ranking-desc\" v-if=\"rankingData.description\">{{ rankingData.description }}</text>\n          <view class=\"ranking-meta\">\n            <text class=\"meta-item\">{{ rankingData.siteName }}</text>\n            <text class=\"meta-divider\">·</text>\n            <text class=\"meta-item\">{{ rankingData.channelName }}</text>\n            <text class=\"meta-divider\">·</text>\n            <text class=\"meta-item\">{{ formatTime(rankingData.updateTime) }}</text>\n          </view>\n        </view>\n        \n        <view class=\"ranking-actions\">\n          <view class=\"action-btn follow-btn\" :class=\"{ 'followed': rankingData.isFollowed }\" @tap=\"toggleFollow\">\n            <text class=\"btn-text\">{{ rankingData.isFollowed ? '已关注' : '关注' }}</text>\n          </view>\n          <view class=\"action-btn share-btn\" @tap=\"shareRanking\">\n            <text class=\"btn-text\">分享</text>\n          </view>\n        </view>\n      </view>\n    </view>\n    \n    <!-- 第一层：变化曲线 -->\n    <view class=\"layer-section chart-section\">\n      <view class=\"layer-header\">\n        <text class=\"layer-title\">📈 数据变化趋势</text>\n      </view>\n      \n      <!-- Tab切换 -->\n      <view class=\"chart-tabs\">\n        <view \n          class=\"tab-item\" \n          :class=\"{ 'active': activeTab === 'totalClicks' }\"\n          @tap=\"switchTab('totalClicks')\"\n        >\n          <text class=\"tab-text\">点击量总和</text>\n        </view>\n        <view \n          class=\"tab-item\" \n          :class=\"{ 'active': activeTab === 'avgClicks' }\"\n          @tap=\"switchTab('avgClicks')\"\n        >\n          <text class=\"tab-text\">点击量均值</text>\n        </view>\n        <view \n          class=\"tab-item\" \n          :class=\"{ 'active': activeTab === 'totalCollects' }\"\n          @tap=\"switchTab('totalCollects')\"\n        >\n          <text class=\"tab-text\">收藏量总和</text>\n        </view>\n        <view \n          class=\"tab-item\" \n          :class=\"{ 'active': activeTab === 'avgCollects' }\"\n          @tap=\"switchTab('avgCollects')\"\n        >\n          <text class=\"tab-text\">收藏量均值</text>\n        </view>\n      </view>\n      \n      <!-- 图表区域 -->\n      <view class=\"chart-container\">\n        <view class=\"chart-area\" v-if=\"chartData.length > 0\">\n          <!-- 网格线 -->\n          <view class=\"chart-grid\">\n            <view class=\"grid-line\" v-for=\"i in 5\" :key=\"i\"></view>\n          </view>\n          \n          <!-- 数据点和连线 -->\n          <view class=\"chart-line\">\n            <view \n              class=\"data-point\" \n              v-for=\"(point, index) in chartPoints\" \n              :key=\"index\"\n              :style=\"{ left: point.x + '%', bottom: point.y + '%' }\"\n            >\n              <view class=\"point-dot\"></view>\n              <text class=\"point-value\">{{ point.value }}</text>\n            </view>\n            \n            <!-- SVG连接线 -->\n            <svg class=\"chart-svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\n              <polyline \n                :points=\"chartLinePoints\" \n                fill=\"none\" \n                stroke=\"#007aff\" \n                stroke-width=\"0.5\"\n              />\n            </svg>\n          </view>\n        </view>\n        \n        <view class=\"empty-chart\" v-else>\n          <text class=\"empty-icon\">📊</text>\n          <text class=\"empty-text\">暂无数据</text>\n        </view>\n      </view>\n      \n      <!-- 数据概览 -->\n      <view class=\"chart-summary\" v-if=\"chartData.length > 0\">\n        <view class=\"summary-item\">\n          <text class=\"summary-label\">最高值</text>\n          <text class=\"summary-value\">{{ formatNumber(getMaxValue()) }}</text>\n        </view>\n        <view class=\"summary-item\">\n          <text class=\"summary-label\">最低值</text>\n          <text class=\"summary-value\">{{ formatNumber(getMinValue()) }}</text>\n        </view>\n        <view class=\"summary-item\">\n          <text class=\"summary-label\">总变化</text>\n          <text class=\"summary-value\">{{ getTotalChange() }}</text>\n        </view>\n      </view>\n    </view>\n    \n    <!-- 第二层：书籍列表 -->\n    <view class=\"layer-section books-section\">\n      <view class=\"layer-header\">\n        <text class=\"layer-title\">📚 榜单书籍</text>\n        <text class=\"book-count\">共{{ booksList.length }}本</text>\n      </view>\n      \n      <view class=\"books-list\" v-if=\"booksList.length > 0\">\n        <view \n          class=\"book-item\"\n          v-for=\"(book, index) in booksList\" \n          :key=\"book.id\"\n          @tap=\"goToBookDetail(book)\"\n        >\n          <view class=\"book-rank\">{{ index + 1 }}</view>\n          <view class=\"book-info\">\n            <view class=\"book-title\">{{ book.title }}</view>\n            <view class=\"book-stats\">\n              <text class=\"stat-item\">\n                收藏: {{ formatNumber(book.collections) }}\n                <text class=\"change-indicator\" :class=\"book.collectionChange > 0 ? 'up' : 'down'\">\n                  {{ book.collectionChange > 0 ? '↑' : '↓' }}{{ Math.abs(book.collectionChange) }}\n                </text>\n              </text>\n              <text class=\"stat-item\">\n                排名: \n                <text class=\"change-indicator\" :class=\"book.rankChange > 0 ? 'down' : 'up'\">\n                  {{ book.rankChange === 0 ? '—' : (book.rankChange > 0 ? '↓' : '↑') }}{{ Math.abs(book.rankChange) }}\n                </text>\n              </text>\n            </view>\n          </view>\n        </view>\n      </view>\n      \n      <!-- 加载更多 -->\n      <view class=\"load-more\" v-if=\"hasMore\">\n        <view class=\"load-btn\" @tap=\"loadMore\" v-if=\"!loadingMore\">\n          <text class=\"load-text\">加载更多</text>\n        </view>\n        <view class=\"loading\" v-else>\n          <text class=\"loading-text\">加载中...</text>\n        </view>\n      </view>\n      \n      <!-- 无更多数据 -->\n      <view class=\"no-more\" v-else-if=\"booksList.length > 0\">\n        <text class=\"no-more-text\">没有更多数据了</text>\n      </view>\n      \n      <!-- 空状态 -->\n      <view class=\"empty-state\" v-if=\"!loading && booksList.length === 0\">\n        <text class=\"empty-icon\">📚</text>\n        <text class=\"empty-text\">暂无书籍数据</text>\n        <view class=\"empty-btn\" @tap=\"refreshData\">\n          <text class=\"btn-text\">重新加载</text>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nimport { get } from '@/utils/request.js'\nimport { getSync, setSync } from '@/utils/storage.js'\n\n/**\n * 榜单详情页面 - 两层数据展示\n * @description 第一层：变化曲线，第二层：书籍列表\n */\nexport default {\n  name: 'RankingDetailPage',\n  \n  data() {\n    return {\n      // 榜单ID\n      rankingId: '',\n      \n      // 榜单数据\n      rankingData: {\n        name: '',\n        description: '',\n        siteName: '',\n        channelName: '',\n        updateTime: ''\n      },\n      \n      // 当前选中的tab\n      activeTab: 'totalClicks', // 'totalClicks' | 'avgClicks' | 'totalCollects' | 'avgCollects'\n      \n      // 图表数据\n      chartStats: {\n        dates: [],\n        totalClicksData: [],    // 点击量增量总和\n        avgClicksData: [],      // 点击量增量平均值\n        totalCollectsData: [],  // 收藏量增量总和\n        avgCollectsData: []     // 收藏量增量平均值\n      },\n      \n      // 书籍列表\n      booksList: [],\n      \n      // 分页信息\n      currentPage: 1,\n      pageSize: 20,\n      hasMore: true,\n      \n      // 加载状态\n      loading: false,\n      loadingMore: false\n    }\n  },\n  \n  computed: {\n    /**\n     * 当前显示的图表数据\n     */\n    chartData() {\n      switch (this.activeTab) {\n        case 'totalClicks':\n          return this.chartStats.totalClicksData || []\n        case 'avgClicks':\n          return this.chartStats.avgClicksData || []\n        case 'totalCollects':\n          return this.chartStats.totalCollectsData || []\n        case 'avgCollects':\n          return this.chartStats.avgCollectsData || []\n        default:\n          return []\n      }\n    },\n    \n    /**\n     * 图表点位数据\n     */\n    chartPoints() {\n      if (this.chartData.length === 0) return []\n      \n      const maxValue = Math.max(...this.chartData)\n      const minValue = Math.min(...this.chartData)\n      const range = maxValue - minValue || 1\n      \n      return this.chartData.map((value, index) => ({\n        x: (index / (this.chartData.length - 1)) * 100,\n        y: ((value - minValue) / range) * 80 + 10,\n        value: this.formatNumber(value)\n      }))\n    },\n    \n    /**\n     * 图表连接线点位\n     */\n    chartLinePoints() {\n      return this.chartPoints.map(point => `${point.x},${100 - point.y}`).join(' ')\n    }\n  },\n  \n  onLoad(options) {\n    if (options.id) {\n      this.rankingId = options.id\n      this.initData()\n    }\n  },\n  \n  // 下拉刷新\n  onPullDownRefresh() {\n    this.refreshData().finally(() => {\n      uni.stopPullDownRefresh()\n    })\n  },\n  \n  // 上拉加载更多\n  onReachBottom() {\n    if (this.hasMore && !this.loadingMore) {\n      this.loadMore()\n    }\n  },\n  \n  methods: {\n    /**\n     * 初始化数据\n     */\n    async initData() {\n      this.loading = true\n      \n      try {\n        // 加载缓存数据\n        this.loadCachedData()\n        \n        // 获取最新数据\n        await Promise.all([\n          this.fetchRankingInfo(),\n          this.fetchChartStats(),\n          this.fetchBooksList(true)\n        ])\n      } catch (error) {\n        console.error('初始化数据失败:', error)\n        this.showError('数据加载失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    /**\n     * 加载缓存数据\n     */\n    loadCachedData() {\n      const cachedRanking = getSync(`ranking_detail_${this.rankingId}`)\n      const cachedChart = getSync(`ranking_chart_${this.rankingId}`)\n      const cachedBooks = getSync(`ranking_books_${this.rankingId}`)\n      \n      if (cachedRanking) {\n        this.rankingData = { ...this.rankingData, ...cachedRanking }\n      }\n      \n      if (cachedChart) {\n        this.chartStats = cachedChart\n      }\n      \n      if (cachedBooks) {\n        this.booksList = cachedBooks\n      }\n    },\n    \n    /**\n     * 获取榜单信息\n     */\n    async fetchRankingInfo() {\n      try {\n        // 模拟API调用\n        const data = await this.getMockRankingData()\n        \n        this.rankingData = { ...this.rankingData, ...data }\n        setSync(`ranking_detail_${this.rankingId}`, data, 30 * 60 * 1000) // 缓存30分钟\n      } catch (error) {\n        console.error('获取榜单信息失败:', error)\n        throw error\n      }\n    },\n    \n    /**\n     * 获取图表统计数据\n     */\n    async fetchChartStats() {\n      try {\n        // 模拟API调用\n        const data = await this.getMockChartData()\n        \n        this.chartStats = data\n        setSync(`ranking_chart_${this.rankingId}`, data, 15 * 60 * 1000) // 缓存15分钟\n      } catch (error) {\n        console.error('获取图表数据失败:', error)\n        throw error\n      }\n    },\n    \n    /**\n     * 获取书籍列表\n     */\n    async fetchBooksList(reset = false) {\n      try {\n        if (reset) {\n          this.currentPage = 1\n          this.hasMore = true\n        }\n        \n        // 模拟API调用\n        const data = await this.getMockBooksData(this.currentPage)\n        \n        if (reset) {\n          this.booksList = data.list\n        } else {\n          this.booksList.push(...data.list)\n        }\n        \n        this.hasMore = data.hasMore || false\n        this.currentPage++\n        \n        // 缓存第一页数据\n        if (reset) {\n          setSync(`ranking_books_${this.rankingId}`, data.list, 15 * 60 * 1000) // 缓存15分钟\n        }\n      } catch (error) {\n        console.error('获取书籍列表失败:', error)\n        throw error\n      }\n    },\n    \n    /**\n     * 获取模拟榜单数据\n     */\n    async getMockRankingData() {\n      await new Promise(resolve => setTimeout(resolve, 500))\n      \n      return {\n        name: '言情总榜',\n        description: '言情分站综合排行榜单',\n        siteName: '言情',\n        channelName: '总榜',\n        updateTime: '2024-01-15T10:30:00'\n      }\n    },\n    \n    /**\n     * 获取模拟图表数据\n     */\n    async getMockChartData() {\n      await new Promise(resolve => setTimeout(resolve, 300))\n      \n      // 生成30天的模拟数据\n      const dates = []\n      const totalClicksData = []\n      const avgClicksData = []\n      const totalCollectsData = []\n      const avgCollectsData = []\n      \n      const now = new Date()\n      for (let i = 29; i >= 0; i--) {\n        const date = new Date(now)\n        date.setDate(date.getDate() - i)\n        dates.push(date.toISOString().split('T')[0])\n        \n        // 模拟点击量增量总和（有波动）\n        const baseTotalClicks = 50000 + i * 1000\n        const totalClicksVariation = Math.random() * 10000 - 5000\n        totalClicksData.push(Math.max(0, Math.floor(baseTotalClicks + totalClicksVariation)))\n        \n        // 模拟点击量增量平均值\n        const baseAvgClicks = 250 + i * 5\n        const avgClicksVariation = Math.random() * 50 - 25\n        avgClicksData.push(Math.max(0, Math.floor(baseAvgClicks + avgClicksVariation)))\n        \n        // 模拟收藏量增量总和\n        const baseTotalCollects = 5000 + i * 100\n        const totalCollectsVariation = Math.random() * 1000 - 500\n        totalCollectsData.push(Math.max(0, Math.floor(baseTotalCollects + totalCollectsVariation)))\n        \n        // 模拟收藏量增量平均值\n        const baseAvgCollects = 25 + i * 0.5\n        const avgCollectsVariation = Math.random() * 5 - 2.5\n        avgCollectsData.push(Math.max(0, Math.floor(baseAvgCollects + avgCollectsVariation)))\n      }\n      \n      return {\n        dates,\n        totalClicksData,\n        avgClicksData,\n        totalCollectsData,\n        avgCollectsData\n      }\n    },\n    \n    /**\n     * 获取模拟书籍数据\n     */\n    async getMockBooksData(page = 1) {\n      await new Promise(resolve => setTimeout(resolve, 200))\n      \n      const pageSize = 20\n      const totalBooks = 100\n      const startIndex = (page - 1) * pageSize\n      \n      const books = []\n      for (let i = 0; i < pageSize && startIndex + i < totalBooks; i++) {\n        const index = startIndex + i\n        books.push({\n          id: `book_${index + 1}`,\n          title: `榜单书籍${index + 1}`,\n          collections: Math.floor(Math.random() * 50000) + 10000,\n          collectionChange: Math.floor(Math.random() * 1000) - 500,\n          rankChange: Math.floor(Math.random() * 10) - 5\n        })\n      }\n      \n      return {\n        list: books,\n        hasMore: startIndex + pageSize < totalBooks\n      }\n    },\n    \n    /**\n     * 刷新数据\n     */\n    async refreshData() {\n      try {\n        await Promise.all([\n          this.fetchRankingInfo(),\n          this.fetchChartStats(),\n          this.fetchBooksList(true)\n        ])\n        \n        uni.showToast({\n          title: '刷新成功',\n          icon: 'success',\n          duration: 1500\n        })\n      } catch (error) {\n        this.showError('刷新失败')\n      }\n    },\n    \n    /**\n     * 加载更多\n     */\n    async loadMore() {\n      if (this.loadingMore || !this.hasMore) return\n      \n      this.loadingMore = true\n      \n      try {\n        await this.fetchBooksList()\n      } catch (error) {\n        this.showError('加载失败')\n      } finally {\n        this.loadingMore = false\n      }\n    },\n    \n    /**\n     * 切换图表Tab\n     */\n    switchTab(tab) {\n      this.activeTab = tab\n    },\n    \n    /**\n     * 获取最大值\n     */\n    getMaxValue() {\n      return Math.max(...this.chartData)\n    },\n    \n    /**\n     * 获取最小值\n     */\n    getMinValue() {\n      return Math.min(...this.chartData)\n    },\n    \n    /**\n     * 获取总变化\n     */\n    getTotalChange() {\n      if (this.chartData.length < 2) return '0%'\n      \n      const first = this.chartData[0]\n      const last = this.chartData[this.chartData.length - 1]\n      const change = ((last - first) / first * 100).toFixed(1)\n      \n      return change > 0 ? `+${change}%` : `${change}%`\n    },\n    \n    /**\n     * 格式化数字\n     */\n    formatNumber(num) {\n      if (typeof num !== 'number') return num || '0'\n      \n      if (num >= 10000) {\n        return (num / 10000).toFixed(1) + '万'\n      } else if (num >= 1000) {\n        return (num / 1000).toFixed(1) + 'k'\n      }\n      \n      return num.toString()\n    },\n    \n    /**\n     * 格式化时间\n     */\n    formatTime(time) {\n      if (!time) return '未知'\n      \n      const now = new Date()\n      const updateTime = new Date(time)\n      const diff = now - updateTime\n      \n      const hours = Math.floor(diff / (1000 * 60 * 60))\n      const days = Math.floor(diff / (1000 * 60 * 60 * 24))\n      \n      if (hours < 24) {\n        return `${hours}小时前`\n      } else if (days < 7) {\n        return `${days}天前`\n      } else {\n        return updateTime.toLocaleDateString()\n      }\n    },\n    \n    /**\n     * 显示错误提示\n     */\n    showError(message) {\n      uni.showToast({\n        title: message,\n        icon: 'none',\n        duration: 2000\n      })\n    },\n    \n    /**\n     * 跳转到书籍详情\n     */\n    goToBookDetail(book) {\n      uni.navigateTo({\n        url: `/pages/book/detail?id=${book.id}`\n      })\n    },\n    \n    /**\n     * 切换关注状态\n     */\n    async toggleFollow() {\n      try {\n        const action = this.rankingData.isFollowed ? 'unfollow' : 'follow'\n        await get(`/api/rankings/${this.rankingId}/${action}`, {}, { method: 'POST' })\n        \n        this.rankingData.isFollowed = !this.rankingData.isFollowed\n        \n        uni.showToast({\n          title: this.rankingData.isFollowed ? '关注成功' : '取消关注',\n          icon: 'success',\n          duration: 1500\n        })\n      } catch (error) {\n        this.showError('操作失败')\n      }\n    },\n    \n    /**\n     * 分享榜单\n     */\n    shareRanking() {\n      uni.share({\n        provider: 'weixin',\n        scene: 'WXSceneSession',\n        type: 0,\n        title: this.rankingData.name,\n        summary: this.rankingData.description || '来看看这个热门榜单',\n        success: () => {\n          uni.showToast({\n            title: '分享成功',\n            icon: 'success'\n          })\n        },\n        fail: () => {\n          this.showError('分享失败')\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.ranking-detail-page {\n  min-height: 100vh;\n  background-color: $page-background;\n  padding-bottom: $safe-area-bottom;\n}\n\n// 榜单头部信息\n.ranking-header {\n  position: relative;\n  padding: $spacing-lg;\n  color: white;\n  overflow: hidden;\n  \n  .header-bg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(135deg, $primary-color, $secondary-color);\n    z-index: -1;\n  }\n  \n  .header-content {\n    .ranking-info {\n      .ranking-title {\n        display: block;\n        font-size: $font-size-xl;\n        font-weight: bold;\n        margin-bottom: $spacing-xs;\n        line-height: 1.3;\n      }\n      \n      .ranking-desc {\n        display: block;\n        font-size: $font-size-sm;\n        opacity: 0.9;\n        margin-bottom: $spacing-sm;\n        line-height: 1.4;\n      }\n      \n      .ranking-meta {\n        @include flex-center;\n        gap: $spacing-xs;\n        \n        .meta-item {\n          font-size: $font-size-xs;\n          opacity: 0.8;\n        }\n        \n        .meta-divider {\n          opacity: 0.6;\n        }\n      }\n    }\n  }\n}\n\n// 层级区域通用样式\n.layer-section {\n  background-color: white;\n  margin-bottom: $spacing-sm;\n  padding: $spacing-lg;\n  \n  .layer-header {\n    @include flex-between;\n    align-items: center;\n    margin-bottom: $spacing-lg;\n    \n    .layer-title {\n      font-size: $font-size-lg;\n      font-weight: bold;\n      color: $text-primary;\n    }\n    \n    .book-count {\n      font-size: $font-size-sm;\n      color: $text-secondary;\n    }\n  }\n}\n\n// 第一层：图表区域\n.chart-section {\n  .chart-tabs {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: $spacing-xs;\n    background-color: $background-color;\n    border-radius: $border-radius-medium;\n    padding: 6rpx;\n    margin-bottom: $spacing-lg;\n    \n    .tab-item {\n      @include flex-center;\n      padding: $spacing-sm;\n      border-radius: $border-radius-small;\n      transition: all 0.3s ease;\n      \n      .tab-text {\n        font-size: $font-size-xs;\n        color: $text-secondary;\n        text-align: center;\n      }\n      \n      &.active {\n        background-color: white;\n        box-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.1);\n        \n        .tab-text {\n          color: $primary-color;\n          font-weight: bold;\n        }\n      }\n    }\n  }\n  \n  .chart-container {\n    margin-bottom: $spacing-lg;\n    \n    .chart-area {\n      position: relative;\n      height: 300rpx;\n      background-color: #fafbfc;\n      border-radius: $border-radius-medium;\n      padding: $spacing-lg;\n      overflow: hidden;\n      \n      .chart-grid {\n        position: absolute;\n        top: $spacing-lg;\n        left: $spacing-lg;\n        right: $spacing-lg;\n        bottom: $spacing-lg;\n        \n        .grid-line {\n          position: absolute;\n          left: 0;\n          right: 0;\n          height: 2rpx;\n          background-color: #e5e7eb;\n          \n          &:nth-child(1) { top: 0; }\n          &:nth-child(2) { top: 25%; }\n          &:nth-child(3) { top: 50%; }\n          &:nth-child(4) { top: 75%; }\n          &:nth-child(5) { bottom: 0; }\n        }\n      }\n      \n      .chart-line {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        \n        .chart-svg {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n        }\n        \n        .data-point {\n          position: absolute;\n          transform: translate(-50%, 50%);\n          \n          .point-dot {\n            width: 8rpx;\n            height: 8rpx;\n            background-color: $primary-color;\n            border-radius: 50%;\n            margin: 0 auto;\n          }\n          \n          .point-value {\n            display: block;\n            font-size: $font-size-xs;\n            color: $text-secondary;\n            text-align: center;\n            margin-top: 6rpx;\n            white-space: nowrap;\n          }\n        }\n      }\n    }\n    \n    .empty-chart {\n      @include flex-column-center;\n      height: 300rpx;\n      background-color: #fafbfc;\n      border-radius: $border-radius-medium;\n      \n      .empty-icon {\n        font-size: 60rpx;\n        margin-bottom: $spacing-sm;\n      }\n      \n      .empty-text {\n        color: $text-placeholder;\n        font-size: $font-size-sm;\n      }\n    }\n  }\n  \n  .chart-summary {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: $spacing-md;\n    \n    .summary-item {\n      @include flex-column-center;\n      padding: $spacing-sm;\n      background-color: $background-color;\n      border-radius: $border-radius-medium;\n      \n      .summary-label {\n        font-size: $font-size-xs;\n        color: $text-secondary;\n        margin-bottom: 4rpx;\n      }\n      \n      .summary-value {\n        font-size: $font-size-sm;\n        font-weight: bold;\n        color: $text-primary;\n      }\n    }\n  }\n}\n\n// 第二层：书籍列表\n.books-section {\n  .books-list {\n    .book-item {\n      @include flex-center;\n      padding: $spacing-lg;\n      border-bottom: 2rpx solid $border-light;\n      transition: background-color 0.3s ease;\n      \n      &:last-child {\n        border-bottom: none;\n      }\n      \n      &:active {\n        background-color: $background-color;\n      }\n      \n      .book-rank {\n        @include flex-center;\n        width: 60rpx;\n        height: 60rpx;\n        background-color: $primary-color;\n        color: white;\n        border-radius: 50%;\n        font-size: $font-size-sm;\n        font-weight: bold;\n        margin-right: $spacing-md;\n        flex-shrink: 0;\n      }\n      \n      .book-info {\n        flex: 1;\n        \n        .book-title {\n          font-size: $font-size-md;\n          font-weight: bold;\n          color: $text-primary;\n          margin-bottom: $spacing-xs;\n          @include text-ellipsis;\n        }\n        \n        .book-stats {\n          @include flex-center;\n          gap: $spacing-lg;\n          \n          .stat-item {\n            font-size: $font-size-sm;\n            color: $text-secondary;\n            \n            .change-indicator {\n              margin-left: $spacing-xs;\n              font-size: $font-size-xs;\n              \n              &.up {\n                color: #22c55e;\n              }\n              \n              &.down {\n                color: #ef4444;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  .load-more {\n    padding: $spacing-lg 0;\n    \n    .load-btn {\n      @include flex-center;\n      padding: $spacing-md;\n      background-color: $background-color;\n      border-radius: $border-radius-medium;\n      \n      .load-text {\n        color: $primary-color;\n        font-size: $font-size-sm;\n      }\n      \n      &:active {\n        opacity: 0.7;\n      }\n    }\n    \n    .loading {\n      @include flex-center;\n      padding: $spacing-md;\n      \n      .loading-text {\n        color: $text-placeholder;\n        font-size: $font-size-sm;\n      }\n    }\n  }\n  \n  .no-more {\n    @include flex-center;\n    padding: $spacing-lg 0;\n    \n    .no-more-text {\n      color: $text-placeholder;\n      font-size: $font-size-sm;\n    }\n  }\n  \n  .empty-state {\n    @include flex-column-center;\n    padding: $spacing-xl;\n    \n    .empty-icon {\n      font-size: 80rpx;\n      margin-bottom: $spacing-md;\n    }\n    \n    .empty-text {\n      color: $text-placeholder;\n      font-size: $font-size-md;\n      margin-bottom: $spacing-lg;\n    }\n    \n    .empty-btn {\n      @include flex-center;\n      padding: $spacing-sm $spacing-lg;\n      background-color: $primary-color;\n      border-radius: $border-radius-medium;\n      \n      .btn-text {\n        color: white;\n        font-size: $font-size-sm;\n      }\n      \n      &:active {\n        opacity: 0.8;\n      }\n    }\n  }\n}\n</style> ","import MiniProgramPage from '/Users/guliyu/weixin-miniapp/JJClawler-frontend/JJClawler-frontend/pages/ranking/detail.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","getSync","setSync","get"],"mappings":"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"}