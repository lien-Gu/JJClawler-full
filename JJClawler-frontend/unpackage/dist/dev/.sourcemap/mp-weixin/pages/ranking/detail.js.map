{"version":3,"file":"detail.js","sources":["pages/ranking/detail.vue","pages/ranking/detail.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"ranking-detail-page\">\n    <!-- 榜单头部信息 -->\n    <view class=\"ranking-header\">\n      <view class=\"header-bg\"></view>\n      <view class=\"header-content\">\n        <view class=\"ranking-info\">\n          <text class=\"ranking-title\">{{ rankingData.name || '榜单详情' }}</text>\n          <text class=\"ranking-desc\" v-if=\"rankingData.description\">{{ rankingData.description }}</text>\n          <view class=\"ranking-meta\">\n            <text class=\"meta-item\">{{ rankingData.siteName }}</text>\n            <text class=\"meta-divider\">·</text>\n            <text class=\"meta-item\">{{ rankingData.channelName }}</text>\n            <text class=\"meta-divider\">·</text>\n            <text class=\"meta-item\">{{ formatTime(rankingData.updateTime) }}</text>\n          </view>\n        </view>\n        \n        <view class=\"ranking-actions\">\n          <view class=\"action-btn follow-btn\" :class=\"{ 'followed': rankingData.isFollowed }\" @tap=\"toggleFollow\">\n            <text class=\"btn-text\">{{ rankingData.isFollowed ? '已关注' : '关注' }}</text>\n          </view>\n          <view class=\"action-btn share-btn\" @tap=\"shareRanking\">\n            <text class=\"btn-text\">分享</text>\n          </view>\n        </view>\n      </view>\n    </view>\n    \n    <!-- 统计数据 -->\n    <view class=\"stats-section\">\n      <view class=\"stats-grid\">\n        <view class=\"stat-item\">\n          <text class=\"stat-value\">{{ rankingData.bookCount || 0 }}</text>\n          <text class=\"stat-label\">书籍总数</text>\n        </view>\n        <view class=\"stat-item\">\n          <text class=\"stat-value\">{{ formatNumber(rankingData.totalViews || 0) }}</text>\n          <text class=\"stat-label\">总浏览量</text>\n        </view>\n        <view class=\"stat-item\">\n          <text class=\"stat-value\">{{ rankingData.updateFrequency || '每日' }}</text>\n          <text class=\"stat-label\">更新频率</text>\n        </view>\n        <view class=\"stat-item\">\n          <text class=\"stat-value\">{{ rankingData.followCount || 0 }}</text>\n          <text class=\"stat-label\">关注人数</text>\n        </view>\n      </view>\n    </view>\n    \n    <!-- 筛选和排序 -->\n    <view class=\"filter-section\">\n      <scroll-view class=\"filter-scroll\" scroll-x>\n        <view class=\"filter-list\">\n          <view \n            class=\"filter-item\" \n            :class=\"{ 'active': currentFilter === filter.key }\"\n            v-for=\"filter in filterOptions\" \n            :key=\"filter.key\"\n            @tap=\"changeFilter(filter.key)\"\n          >\n            <text class=\"filter-text\">{{ filter.name }}</text>\n          </view>\n        </view>\n      </scroll-view>\n      \n      <view class=\"sort-btn\" @tap=\"showSortOptions\">\n        <text class=\"sort-text\">{{ currentSortName }}</text>\n        <text class=\"sort-icon\">▼</text>\n      </view>\n    </view>\n    \n    <!-- 书籍列表 -->\n    <view class=\"books-section\">\n      <view class=\"books-list\">\n        <BookCard \n          v-for=\"(book, index) in booksList\" \n          :key=\"book.id\"\n          :book=\"{ ...book, rank: index + 1 + (currentPage - 1) * pageSize }\"\n          :showRankings=\"false\"\n          :showActions=\"true\"\n          @click=\"goToBookDetail\"\n          @follow=\"onBookFollow\"\n          @read=\"onBookRead\"\n          @share=\"onBookShare\"\n        />\n      </view>\n      \n      <!-- 加载更多 -->\n      <view class=\"load-more\" v-if=\"hasMore\">\n        <view class=\"load-btn\" @tap=\"loadMore\" v-if=\"!loadingMore\">\n          <text class=\"load-text\">加载更多</text>\n        </view>\n        <view class=\"loading\" v-else>\n          <text class=\"loading-text\">加载中...</text>\n        </view>\n      </view>\n      \n      <!-- 无更多数据 -->\n      <view class=\"no-more\" v-else-if=\"booksList.length > 0\">\n        <text class=\"no-more-text\">没有更多数据了</text>\n      </view>\n      \n      <!-- 空状态 -->\n      <view class=\"empty-state\" v-if=\"!loading && booksList.length === 0\">\n        <text class=\"empty-icon\">📚</text>\n        <text class=\"empty-text\">暂无书籍数据</text>\n        <view class=\"empty-btn\" @tap=\"refreshData\">\n          <text class=\"btn-text\">重新加载</text>\n        </view>\n      </view>\n    </view>\n    \n    <!-- 排序选择弹窗 -->\n    <view class=\"sort-popup\" v-if=\"showSortPopup\" @tap=\"hideSortOptions\">\n      <view class=\"popup-content\" @tap.stop>\n        <view class=\"popup-header\">\n          <text class=\"popup-title\">选择排序方式</text>\n          <view class=\"popup-close\" @tap=\"hideSortOptions\">\n            <text class=\"close-text\">×</text>\n          </view>\n        </view>\n        <view class=\"sort-options\">\n          <view \n            class=\"sort-option\" \n            :class=\"{ 'active': currentSort === option.key }\"\n            v-for=\"option in sortOptions\" \n            :key=\"option.key\"\n            @tap=\"changeSort(option.key)\"\n          >\n            <text class=\"option-text\">{{ option.name }}</text>\n            <text class=\"option-check\" v-if=\"currentSort === option.key\">✓</text>\n          </view>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nimport BookCard from '@/components/BookCard.vue'\nimport { get } from '@/utils/request.js'\nimport { getSync, setSync } from '@/utils/storage.js'\n\n/**\n * 榜单详情页面\n * @description 展示榜单统计信息和书籍列表\n */\nexport default {\n  name: 'RankingDetailPage',\n  components: {\n    BookCard\n  },\n  \n  data() {\n    return {\n      // 榜单ID\n      rankingId: '',\n      \n      // 榜单数据\n      rankingData: {},\n      \n      // 书籍列表\n      booksList: [],\n      \n      // 分页信息\n      currentPage: 1,\n      pageSize: 20,\n      hasMore: true,\n      \n      // 筛选选项\n      filterOptions: [\n        { key: 'all', name: '全部' },\n        { key: 'completed', name: '已完结' },\n        { key: 'ongoing', name: '连载中' },\n        { key: 'new', name: '新书' }\n      ],\n      currentFilter: 'all',\n      \n      // 排序选项\n      sortOptions: [\n        { key: 'rank', name: '榜单排名' },\n        { key: 'updateTime', name: '最近更新' },\n        { key: 'wordCount', name: '字数排序' },\n        { key: 'score', name: '评分排序' }\n      ],\n      currentSort: 'rank',\n      showSortPopup: false,\n      \n      // 加载状态\n      loading: false,\n      loadingMore: false\n    }\n  },\n  \n  computed: {\n    /**\n     * 当前排序名称\n     */\n    currentSortName() {\n      const option = this.sortOptions.find(item => item.key === this.currentSort)\n      return option ? option.name : '榜单排名'\n    }\n  },\n  \n  onLoad(options) {\n    if (options.id) {\n      this.rankingId = options.id\n      this.initData()\n    }\n  },\n  \n  // 下拉刷新\n  onPullDownRefresh() {\n    this.refreshData().finally(() => {\n      uni.stopPullDownRefresh()\n    })\n  },\n  \n  // 上拉加载更多\n  onReachBottom() {\n    if (this.hasMore && !this.loadingMore) {\n      this.loadMore()\n    }\n  },\n  \n  methods: {\n    /**\n     * 初始化数据\n     */\n    async initData() {\n      this.loading = true\n      \n      try {\n        // 加载缓存数据\n        this.loadCachedData()\n        \n        // 获取最新数据\n        await Promise.all([\n          this.fetchRankingInfo(),\n          this.fetchBooksList(true)\n        ])\n      } catch (error) {\n        console.error('初始化数据失败:', error)\n        this.showError('数据加载失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    /**\n     * 加载缓存数据\n     */\n    loadCachedData() {\n      const cachedRanking = getSync(`ranking_${this.rankingId}`)\n      const cachedBooks = getSync(`ranking_books_${this.rankingId}`)\n      \n      if (cachedRanking) {\n        this.rankingData = cachedRanking\n      }\n      \n      if (cachedBooks) {\n        this.booksList = cachedBooks\n      }\n    },\n    \n    /**\n     * 获取榜单信息\n     */\n    async fetchRankingInfo() {\n      try {\n        const data = await get(`/api/rankings/${this.rankingId}`)\n        if (data) {\n          this.rankingData = data\n          setSync(`ranking_${this.rankingId}`, data, 30 * 60 * 1000) // 缓存30分钟\n        }\n      } catch (error) {\n        console.error('获取榜单信息失败:', error)\n        throw error\n      }\n    },\n    \n    /**\n     * 获取书籍列表\n     */\n    async fetchBooksList(reset = false) {\n      try {\n        if (reset) {\n          this.currentPage = 1\n          this.hasMore = true\n        }\n        \n        const params = {\n          page: this.currentPage,\n          pageSize: this.pageSize,\n          filter: this.currentFilter,\n          sort: this.currentSort\n        }\n        \n        const data = await get(`/api/rankings/${this.rankingId}/books`, params)\n        \n        if (data && data.list) {\n          if (reset) {\n            this.booksList = data.list\n          } else {\n            this.booksList.push(...data.list)\n          }\n          \n          this.hasMore = data.hasMore || false\n          this.currentPage++\n          \n          // 缓存第一页数据\n          if (reset) {\n            setSync(`ranking_books_${this.rankingId}`, data.list, 15 * 60 * 1000) // 缓存15分钟\n          }\n        }\n      } catch (error) {\n        console.error('获取书籍列表失败:', error)\n        throw error\n      }\n    },\n    \n    /**\n     * 刷新数据\n     */\n    async refreshData() {\n      try {\n        await Promise.all([\n          this.fetchRankingInfo(),\n          this.fetchBooksList(true)\n        ])\n        \n        uni.showToast({\n          title: '刷新成功',\n          icon: 'success',\n          duration: 1500\n        })\n      } catch (error) {\n        this.showError('刷新失败')\n      }\n    },\n    \n    /**\n     * 加载更多\n     */\n    async loadMore() {\n      if (this.loadingMore || !this.hasMore) return\n      \n      this.loadingMore = true\n      \n      try {\n        await this.fetchBooksList()\n      } catch (error) {\n        this.showError('加载失败')\n      } finally {\n        this.loadingMore = false\n      }\n    },\n    \n    /**\n     * 切换筛选条件\n     */\n    changeFilter(filterKey) {\n      if (this.currentFilter === filterKey) return\n      \n      this.currentFilter = filterKey\n      this.fetchBooksList(true)\n    },\n    \n    /**\n     * 显示排序选项\n     */\n    showSortOptions() {\n      this.showSortPopup = true\n    },\n    \n    /**\n     * 隐藏排序选项\n     */\n    hideSortOptions() {\n      this.showSortPopup = false\n    },\n    \n    /**\n     * 切换排序方式\n     */\n    changeSort(sortKey) {\n      if (this.currentSort === sortKey) {\n        this.hideSortOptions()\n        return\n      }\n      \n      this.currentSort = sortKey\n      this.hideSortOptions()\n      this.fetchBooksList(true)\n    },\n    \n    /**\n     * 切换关注状态\n     */\n    async toggleFollow() {\n      try {\n        const action = this.rankingData.isFollowed ? 'unfollow' : 'follow'\n        await get(`/api/rankings/${this.rankingId}/${action}`, {}, { method: 'POST' })\n        \n        this.rankingData.isFollowed = !this.rankingData.isFollowed\n        \n        uni.showToast({\n          title: this.rankingData.isFollowed ? '关注成功' : '取消关注',\n          icon: 'success',\n          duration: 1500\n        })\n      } catch (error) {\n        this.showError('操作失败')\n      }\n    },\n    \n    /**\n     * 分享榜单\n     */\n    shareRanking() {\n      uni.share({\n        provider: 'weixin',\n        scene: 'WXSceneSession',\n        type: 0,\n        title: this.rankingData.name,\n        summary: this.rankingData.description || '来看看这个热门榜单',\n        success: () => {\n          uni.showToast({\n            title: '分享成功',\n            icon: 'success'\n          })\n        },\n        fail: () => {\n          this.showError('分享失败')\n        }\n      })\n    },\n    \n    /**\n     * 格式化数字\n     */\n    formatNumber(num) {\n      if (typeof num !== 'number') return num || '0'\n      \n      if (num >= 10000) {\n        return (num / 10000).toFixed(1) + '万'\n      } else if (num >= 1000) {\n        return (num / 1000).toFixed(1) + 'k'\n      }\n      \n      return num.toString()\n    },\n    \n    /**\n     * 格式化时间\n     */\n    formatTime(time) {\n      if (!time) return '未知'\n      \n      const now = new Date()\n      const updateTime = new Date(time)\n      const diff = now - updateTime\n      \n      const hours = Math.floor(diff / (1000 * 60 * 60))\n      const days = Math.floor(diff / (1000 * 60 * 60 * 24))\n      \n      if (hours < 24) {\n        return `${hours}小时前`\n      } else if (days < 7) {\n        return `${days}天前`\n      } else {\n        return updateTime.toLocaleDateString()\n      }\n    },\n    \n    /**\n     * 显示错误提示\n     */\n    showError(message) {\n      uni.showToast({\n        title: message,\n        icon: 'none',\n        duration: 2000\n      })\n    },\n    \n    /**\n     * 跳转到书籍详情\n     */\n    goToBookDetail(book) {\n      uni.navigateTo({\n        url: `/pages/book/detail?id=${book.id}`\n      })\n    },\n    \n    /**\n     * 书籍关注事件\n     */\n    async onBookFollow(event) {\n      try {\n        const { book, isFollowed } = event\n        const action = isFollowed ? 'follow' : 'unfollow'\n        \n        await get(`/api/books/${book.id}/${action}`, {}, { method: 'POST' })\n        \n        // 更新本地状态\n        const bookIndex = this.booksList.findIndex(item => item.id === book.id)\n        if (bookIndex !== -1) {\n          this.booksList[bookIndex].isFollowed = isFollowed\n        }\n        \n        uni.showToast({\n          title: isFollowed ? '关注成功' : '取消关注',\n          icon: 'success',\n          duration: 1500\n        })\n      } catch (error) {\n        this.showError('操作失败')\n      }\n    },\n    \n    /**\n     * 书籍阅读事件\n     */\n    onBookRead(book) {\n      // 这里可以跳转到阅读页面或外部链接\n      console.log('阅读书籍:', book)\n      uni.showToast({\n        title: '功能开发中',\n        icon: 'none'\n      })\n    },\n    \n    /**\n     * 书籍分享事件\n     */\n    onBookShare(book) {\n      uni.share({\n        provider: 'weixin',\n        scene: 'WXSceneSession',\n        type: 0,\n        title: book.name || book.title,\n        summary: `推荐一本好书：${book.author ? '作者 ' + book.author : ''}`,\n        success: () => {\n          uni.showToast({\n            title: '分享成功',\n            icon: 'success'\n          })\n        },\n        fail: () => {\n          this.showError('分享失败')\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.ranking-detail-page {\n  min-height: 100vh;\n  background-color: $page-background;\n  padding-bottom: $safe-area-bottom;\n}\n\n.ranking-header {\n  position: relative;\n  padding: $spacing-lg $spacing-lg $spacing-xl;\n  color: white;\n  overflow: hidden;\n  \n  .header-bg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(135deg, $primary-color, $secondary-color);\n    z-index: -1;\n  }\n  \n  .header-content {\n    @include flex-between;\n    align-items: flex-start;\n  }\n  \n  .ranking-info {\n    flex: 1;\n    margin-right: $spacing-md;\n    \n    .ranking-title {\n      display: block;\n      font-size: $font-size-xl;\n      font-weight: bold;\n      margin-bottom: $spacing-xs;\n      line-height: 1.3;\n    }\n    \n    .ranking-desc {\n      display: block;\n      font-size: $font-size-sm;\n      opacity: 0.9;\n      margin-bottom: $spacing-sm;\n      line-height: 1.4;\n    }\n    \n    .ranking-meta {\n      @include flex-center;\n      gap: $spacing-xs;\n      \n      .meta-item {\n        font-size: $font-size-xs;\n        opacity: 0.8;\n      }\n      \n      .meta-divider {\n        opacity: 0.6;\n      }\n    }\n  }\n  \n  .ranking-actions {\n    @include flex-center;\n    gap: $spacing-sm;\n    \n    .action-btn {\n      @include flex-center;\n      padding: $spacing-xs $spacing-md;\n      border-radius: $border-radius-medium;\n      transition: all 0.3s ease;\n      \n      .btn-text {\n        font-size: $font-size-sm;\n      }\n      \n      &:active {\n        opacity: 0.7;\n      }\n    }\n    \n    .follow-btn {\n      background-color: rgba(255, 255, 255, 0.2);\n      \n      &.followed {\n        background-color: rgba(255, 255, 255, 0.3);\n      }\n      \n      .btn-text {\n        color: white;\n      }\n    }\n    \n    .share-btn {\n      background-color: transparent;\n      border: 2rpx solid rgba(255, 255, 255, 0.3);\n      \n      .btn-text {\n        color: white;\n      }\n    }\n  }\n}\n\n.stats-section {\n  padding: $spacing-lg;\n  background-color: white;\n  margin-bottom: $spacing-sm;\n  \n  .stats-grid {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    gap: $spacing-md;\n    \n    .stat-item {\n      @include flex-column-center;\n      \n      .stat-value {\n        font-size: $font-size-lg;\n        font-weight: bold;\n        color: $primary-color;\n        margin-bottom: 4rpx;\n      }\n      \n      .stat-label {\n        font-size: $font-size-xs;\n        color: $text-secondary;\n      }\n    }\n  }\n}\n\n.filter-section {\n  @include flex-between;\n  align-items: center;\n  padding: $spacing-md $spacing-lg;\n  background-color: white;\n  margin-bottom: $spacing-sm;\n  \n  .filter-scroll {\n    flex: 1;\n    margin-right: $spacing-md;\n  }\n  \n  .filter-list {\n    @include flex-center;\n    gap: $spacing-md;\n    white-space: nowrap;\n    \n    .filter-item {\n      padding: $spacing-xs $spacing-md;\n      border-radius: $border-radius-medium;\n      transition: all 0.3s ease;\n      \n      .filter-text {\n        font-size: $font-size-sm;\n        color: $text-secondary;\n      }\n      \n      &.active {\n        background-color: $primary-color;\n        \n        .filter-text {\n          color: white;\n        }\n      }\n    }\n  }\n  \n  .sort-btn {\n    @include flex-center;\n    gap: 4rpx;\n    padding: $spacing-xs $spacing-sm;\n    border: 2rpx solid $border-medium;\n    border-radius: $border-radius-medium;\n    \n    .sort-text {\n      font-size: $font-size-sm;\n      color: $text-primary;\n    }\n    \n    .sort-icon {\n      font-size: $font-size-xs;\n      color: $text-placeholder;\n      transition: transform 0.3s ease;\n    }\n    \n    &:active {\n      background-color: $background-color;\n    }\n  }\n}\n\n.books-section {\n  .books-list {\n    padding: 0 $spacing-lg;\n  }\n  \n  .load-more {\n    padding: $spacing-lg;\n    \n    .load-btn {\n      @include flex-center;\n      padding: $spacing-md;\n      background-color: white;\n      border-radius: $border-radius-medium;\n      \n      .load-text {\n        color: $primary-color;\n        font-size: $font-size-sm;\n      }\n      \n      &:active {\n        background-color: $background-color;\n      }\n    }\n    \n    .loading {\n      @include flex-center;\n      padding: $spacing-md;\n      \n      .loading-text {\n        color: $text-placeholder;\n        font-size: $font-size-sm;\n      }\n    }\n  }\n  \n  .no-more {\n    @include flex-center;\n    padding: $spacing-lg;\n    \n    .no-more-text {\n      color: $text-placeholder;\n      font-size: $font-size-sm;\n    }\n  }\n  \n  .empty-state {\n    @include flex-column-center;\n    padding: $spacing-xl;\n    \n    .empty-icon {\n      font-size: 80rpx;\n      margin-bottom: $spacing-md;\n    }\n    \n    .empty-text {\n      color: $text-placeholder;\n      font-size: $font-size-md;\n      margin-bottom: $spacing-lg;\n    }\n    \n    .empty-btn {\n      @include flex-center;\n      padding: $spacing-sm $spacing-lg;\n      background-color: $primary-color;\n      border-radius: $border-radius-medium;\n      \n      .btn-text {\n        color: white;\n        font-size: $font-size-sm;\n      }\n      \n      &:active {\n        opacity: 0.8;\n      }\n    }\n  }\n}\n\n.sort-popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  @include flex-center;\n  z-index: 1000;\n  \n  .popup-content {\n    background-color: white;\n    border-radius: $border-radius-large;\n    margin: $spacing-lg;\n    max-width: 600rpx;\n    width: 100%;\n    max-height: 60vh;\n    overflow: hidden;\n  }\n  \n  .popup-header {\n    @include flex-between;\n    align-items: center;\n    padding: $spacing-lg;\n    border-bottom: 2rpx solid $border-light;\n    \n    .popup-title {\n      font-size: $font-size-lg;\n      font-weight: bold;\n      color: $text-primary;\n    }\n    \n    .popup-close {\n      @include flex-center;\n      width: 60rpx;\n      height: 60rpx;\n      border-radius: 50%;\n      \n      .close-text {\n        font-size: $font-size-xl;\n        color: $text-placeholder;\n      }\n      \n      &:active {\n        background-color: $background-color;\n      }\n    }\n  }\n  \n  .sort-options {\n    max-height: 50vh;\n    overflow-y: auto;\n  }\n  \n  .sort-option {\n    @include flex-between;\n    align-items: center;\n    padding: $spacing-lg;\n    transition: background-color 0.3s ease;\n    \n    .option-text {\n      font-size: $font-size-md;\n      color: $text-primary;\n    }\n    \n    .option-check {\n      font-size: $font-size-lg;\n      color: $primary-color;\n    }\n    \n    &.active {\n      background-color: $background-color;\n      \n      .option-text {\n        color: $primary-color;\n        font-weight: bold;\n      }\n    }\n    \n    &:active {\n      background-color: $background-color;\n    }\n  }\n}\n</style> ","import MiniProgramPage from '/Users/guliyu/weixin-miniapp/JJClawler-frontend/JJClawler-frontend/pages/ranking/detail.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","getSync","get","setSync"],"mappings":"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"}