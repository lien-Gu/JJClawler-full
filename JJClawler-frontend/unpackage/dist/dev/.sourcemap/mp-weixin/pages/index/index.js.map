{"version":3,"file":"index.js","sources":["pages/index/index.vue","pages/index/index.vue?type=page"],"sourcesContent":["<template>\r\n\t<view class=\"home-page\">\r\n\t\t<!-- 顶部欢迎区域 -->\r\n\t\t<view class=\"welcome-section\">\r\n\t\t\t<view class=\"welcome-content\">\r\n\t\t\t\t<text class=\"welcome-title\">晋江数据中心</text>\r\n\t\t\t\t<text class=\"welcome-subtitle\">实时掌握最新榜单动态</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"refresh-btn\" @tap=\"refreshData\">\r\n\t\t\t\t<text class=\"refresh-text\">刷新</text>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 核心统计数据 -->\r\n\t\t<view class=\"stats-section\">\r\n\t\t\t<text class=\"section-title\">数据概览</text>\r\n\t\t\t<view class=\"stats-grid\">\r\n\t\t\t\t<StatsCard \r\n\t\t\t\t\tv-for=\"stat in coreStats\" \r\n\t\t\t\t\t:key=\"stat.key\"\r\n\t\t\t\t\t:title=\"stat.title\"\r\n\t\t\t\t\t:value=\"stat.value\"\r\n\t\t\t\t\t:trend=\"stat.trend\"\r\n\t\t\t\t\t:icon=\"stat.icon\"\r\n\t\t\t\t\t:color=\"stat.color\"\r\n\t\t\t\t\t@click=\"onStatClick(stat)\"\r\n\t\t\t\t/>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 分站数据统计 -->\r\n\t\t<view class=\"sites-section\">\r\n\t\t\t<view class=\"section-header\">\r\n\t\t\t\t<text class=\"section-title\">分站统计</text>\r\n\t\t\t\t<text class=\"section-more\" @tap=\"goToRanking\">查看更多</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"sites-grid\">\r\n\t\t\t\t<view \r\n\t\t\t\t\tclass=\"site-card\" \r\n\t\t\t\t\tv-for=\"site in siteStats\" \r\n\t\t\t\t\t:key=\"site.key\"\r\n\t\t\t\t\t@tap=\"goToSite(site)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<view class=\"site-info\">\r\n\t\t\t\t\t\t<text class=\"site-name\">{{ site.name }}</text>\r\n\t\t\t\t\t\t<text class=\"site-count\">{{ site.rankingCount }}个榜单</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"site-trend\">\r\n\t\t\t\t\t\t<text class=\"trend-value\" :class=\"site.trend > 0 ? 'trend-up' : 'trend-down'\">\r\n\t\t\t\t\t\t\t{{ site.trend > 0 ? '+' : '' }}{{ site.trend }}\r\n\t\t\t\t\t\t</text>\r\n\t\t\t\t\t\t<text class=\"trend-label\">本周</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 热门榜单 -->\r\n\t\t<view class=\"hot-rankings-section\">\r\n\t\t\t<view class=\"section-header\">\r\n\t\t\t\t<text class=\"section-title\">热门榜单</text>\r\n\t\t\t\t<text class=\"section-more\" @tap=\"goToRanking\">查看全部</text>\r\n\t\t\t</view>\r\n\t\t\t<scroll-view class=\"rankings-scroll\" scroll-x>\r\n\t\t\t\t<view class=\"rankings-list\">\r\n\t\t\t\t\t<view \r\n\t\t\t\t\t\tclass=\"ranking-item\" \r\n\t\t\t\t\t\tv-for=\"ranking in hotRankings\" \r\n\t\t\t\t\t\t:key=\"ranking.id\"\r\n\t\t\t\t\t\t@tap=\"goToRankingDetail(ranking)\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<view class=\"ranking-badge\" v-if=\"ranking.isHot\">HOT</view>\r\n\t\t\t\t\t\t<text class=\"ranking-name\">{{ ranking.name }}</text>\r\n\t\t\t\t\t\t<text class=\"ranking-desc\">{{ ranking.bookCount }}本书籍</text>\r\n\t\t\t\t\t\t<text class=\"ranking-update\">{{ formatTime(ranking.updateTime) }}</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</scroll-view>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 最近更新 -->\r\n\t\t<view class=\"recent-section\">\r\n\t\t\t<text class=\"section-title\">最近更新</text>\r\n\t\t\t<view class=\"recent-list\">\r\n\t\t\t\t<view \r\n\t\t\t\t\tclass=\"recent-item\" \r\n\t\t\t\t\tv-for=\"item in recentUpdates\" \r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t@tap=\"goToDetail(item)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<view class=\"recent-info\">\r\n\t\t\t\t\t\t<text class=\"recent-title\">{{ item.title }}</text>\r\n\t\t\t\t\t\t<text class=\"recent-subtitle\">{{ item.subtitle }}</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"recent-time\">\r\n\t\t\t\t\t\t<text class=\"time-text\">{{ formatTime(item.updateTime) }}</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\nimport StatsCard from '@/components/StatsCard.vue'\r\nimport { get } from '@/utils/request.js'\r\nimport { getSync, setSync } from '@/utils/storage.js'\r\n\r\n/**\r\n * 首页组件\r\n * @description 展示统计数据概览、热门榜单、最近更新等信息\r\n */\r\nexport default {\r\n\tname: 'HomePage',\r\n\tcomponents: {\r\n\t\tStatsCard\r\n\t},\r\n\t\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\t// 核心统计数据\r\n\t\t\tcoreStats: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'totalBooks',\r\n\t\t\t\t\ttitle: '总书籍数',\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\ttrend: 0,\r\n\t\t\t\t\ticon: '📚',\r\n\t\t\t\t\tcolor: '#007AFF'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'totalRankings',\r\n\t\t\t\t\ttitle: '总榜单数',\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\ttrend: 0,\r\n\t\t\t\t\ticon: '��',\r\n\t\t\t\t\tcolor: '#34C759'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'todayUpdates',\r\n\t\t\t\t\ttitle: '今日更新',\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\ttrend: 0,\r\n\t\t\t\t\ticon: '🔄',\r\n\t\t\t\t\tcolor: '#FF9500'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'activeUsers',\r\n\t\t\t\t\ttitle: '活跃用户',\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\ttrend: 0,\r\n\t\t\t\t\ticon: '👥',\r\n\t\t\t\t\tcolor: '#AF52DE'\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\r\n\t\t\t// 分站统计数据\r\n\t\t\tsiteStats: [],\r\n\t\t\t\r\n\t\t\t// 热门榜单\r\n\t\t\thotRankings: [],\r\n\t\t\t\r\n\t\t\t// 最近更新\r\n\t\t\trecentUpdates: [],\r\n\t\t\t\r\n\t\t\t// 加载状态\r\n\t\t\tloading: false,\r\n\t\t\t\r\n\t\t\t// 刷新状态\r\n\t\t\trefreshing: false\r\n\t\t}\r\n\t},\r\n\t\r\n\tonLoad() {\r\n\t\tthis.initData()\r\n\t},\r\n\t\r\n\tonShow() {\r\n\t\t// 每次显示页面时检查是否需要刷新数据\r\n\t\tthis.checkDataFreshness()\r\n\t},\r\n\t\r\n\t// 下拉刷新\r\n\tonPullDownRefresh() {\r\n\t\tthis.refreshData().finally(() => {\r\n\t\t\tuni.stopPullDownRefresh()\r\n\t\t})\r\n\t},\r\n\t\r\n\tmethods: {\r\n\t\t/**\r\n\t\t * 初始化数据\r\n\t\t */\r\n\t\tasync initData() {\r\n\t\t\tthis.loading = true\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\t// 先加载缓存数据\r\n\t\t\t\tthis.loadCachedData()\r\n\t\t\t\t\r\n\t\t\t\t// 再获取最新数据\r\n\t\t\t\tawait this.fetchData()\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('初始化数据失败:', error)\r\n\t\t\t\tthis.showError('数据加载失败')\r\n\t\t\t} finally {\r\n\t\t\t\tthis.loading = false\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 加载缓存数据\r\n\t\t */\r\n\t\tloadCachedData() {\r\n\t\t\tconst cachedStats = getSync('homeStats')\r\n\t\t\tconst cachedSiteStats = getSync('homeSiteStats')\r\n\t\t\tconst cachedHotRankings = getSync('homeHotRankings')\r\n\t\t\tconst cachedRecentUpdates = getSync('homeRecentUpdates')\r\n\t\t\t\r\n\t\t\tif (cachedStats) {\r\n\t\t\t\tthis.updateCoreStats(cachedStats)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (cachedSiteStats) {\r\n\t\t\t\tthis.siteStats = cachedSiteStats\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (cachedHotRankings) {\r\n\t\t\t\tthis.hotRankings = cachedHotRankings\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (cachedRecentUpdates) {\r\n\t\t\t\tthis.recentUpdates = cachedRecentUpdates\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 获取最新数据\r\n\t\t */\r\n\t\tasync fetchData() {\r\n\t\t\ttry {\r\n\t\t\t\t// 并行请求所有数据\r\n\t\t\t\tconst [statsRes, sitesRes, rankingsRes, updatesRes] = await Promise.all([\r\n\t\t\t\t\tget('/api/stats/overview'),\r\n\t\t\t\t\tget('/api/sites/stats'),\r\n\t\t\t\t\tget('/api/rankings/hot', { limit: 6 }),\r\n\t\t\t\t\tget('/api/recent/updates', { limit: 8 })\r\n\t\t\t\t])\r\n\t\t\t\t\r\n\t\t\t\t// 更新核心统计\r\n\t\t\t\tif (statsRes) {\r\n\t\t\t\t\tthis.updateCoreStats(statsRes)\r\n\t\t\t\t\tsetSync('homeStats', statsRes, 5 * 60 * 1000) // 缓存5分钟\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 更新分站统计\r\n\t\t\t\tif (sitesRes) {\r\n\t\t\t\t\tthis.siteStats = sitesRes\r\n\t\t\t\t\tsetSync('homeSiteStats', sitesRes, 10 * 60 * 1000) // 缓存10分钟\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 更新热门榜单\r\n\t\t\t\tif (rankingsRes) {\r\n\t\t\t\t\tthis.hotRankings = rankingsRes\r\n\t\t\t\t\tsetSync('homeHotRankings', rankingsRes, 15 * 60 * 1000) // 缓存15分钟\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 更新最近更新\r\n\t\t\t\tif (updatesRes) {\r\n\t\t\t\t\tthis.recentUpdates = updatesRes\r\n\t\t\t\t\tsetSync('homeRecentUpdates', updatesRes, 5 * 60 * 1000) // 缓存5分钟\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('获取数据失败:', error)\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 更新核心统计数据\r\n\t\t */\r\n\t\tupdateCoreStats(data) {\r\n\t\t\tthis.coreStats.forEach(stat => {\r\n\t\t\t\tif (data[stat.key] !== undefined) {\r\n\t\t\t\t\tstat.value = data[stat.key]\r\n\t\t\t\t\tstat.trend = data[`${stat.key}Trend`] || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 检查数据新鲜度\r\n\t\t */\r\n\t\tcheckDataFreshness() {\r\n\t\t\tconst lastUpdate = getSync('homeLastUpdate', 0)\r\n\t\t\tconst now = Date.now()\r\n\t\t\t\r\n\t\t\t// 如果超过10分钟，静默刷新数据\r\n\t\t\tif (now - lastUpdate > 10 * 60 * 1000) {\r\n\t\t\t\tthis.fetchData().catch(() => {\r\n\t\t\t\t\t// 静默失败\r\n\t\t\t\t}).finally(() => {\r\n\t\t\t\t\tsetSync('homeLastUpdate', now)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 刷新数据\r\n\t\t */\r\n\t\tasync refreshData() {\r\n\t\t\tif (this.refreshing) return\r\n\t\t\t\r\n\t\t\tthis.refreshing = true\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tawait this.fetchData()\r\n\t\t\t\tsetSync('homeLastUpdate', Date.now())\r\n\t\t\t\t\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '刷新成功',\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\tduration: 1500\r\n\t\t\t\t})\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthis.showError('刷新失败')\r\n\t\t\t} finally {\r\n\t\t\t\tthis.refreshing = false\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 格式化时间显示\r\n\t\t */\r\n\t\tformatTime(time) {\r\n\t\t\tif (!time) return '未知'\r\n\t\t\t\r\n\t\t\tconst now = new Date()\r\n\t\t\tconst updateTime = new Date(time)\r\n\t\t\tconst diff = now - updateTime\r\n\t\t\t\r\n\t\t\tconst minutes = Math.floor(diff / (1000 * 60))\r\n\t\t\tconst hours = Math.floor(diff / (1000 * 60 * 60))\r\n\t\t\tconst days = Math.floor(diff / (1000 * 60 * 60 * 24))\r\n\t\t\t\r\n\t\t\tif (minutes < 60) {\r\n\t\t\t\treturn `${minutes}分钟前`\r\n\t\t\t} else if (hours < 24) {\r\n\t\t\t\treturn `${hours}小时前`\r\n\t\t\t} else if (days < 7) {\r\n\t\t\t\treturn `${days}天前`\r\n\t\t\t} else {\r\n\t\t\t\treturn updateTime.toLocaleDateString()\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 显示错误提示\r\n\t\t */\r\n\t\tshowError(message) {\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: message,\r\n\t\t\t\ticon: 'none',\r\n\t\t\t\tduration: 2000\r\n\t\t\t})\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 统计卡片点击事件\r\n\t\t */\r\n\t\tonStatClick(stat) {\r\n\t\t\tconsole.log('点击统计卡片:', stat)\r\n\t\t\t// 可以跳转到对应的详情页面\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 跳转到榜单页面\r\n\t\t */\r\n\t\tgoToRanking() {\r\n\t\t\tuni.switchTab({\r\n\t\t\t\turl: '/pages/ranking/index'\r\n\t\t\t})\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 跳转到分站页面\r\n\t\t */\r\n\t\tgoToSite(site) {\r\n\t\t\tuni.switchTab({\r\n\t\t\t\turl: `/pages/ranking/index?site=${site.key}`\r\n\t\t\t})\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 跳转到榜单详情\r\n\t\t */\r\n\t\tgoToRankingDetail(ranking) {\r\n\t\t\tuni.navigateTo({\r\n\t\t\t\turl: `/pages/ranking/detail?id=${ranking.id}`\r\n\t\t\t})\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 跳转到详情页面\r\n\t\t */\r\n\t\tgoToDetail(item) {\r\n\t\t\tif (item.type === 'ranking') {\r\n\t\t\t\tthis.goToRankingDetail(item)\r\n\t\t\t} else if (item.type === 'book') {\r\n\t\t\t\tuni.navigateTo({\r\n\t\t\t\t\turl: `/pages/book/detail?id=${item.id}`\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.home-page {\r\n\tmin-height: 100vh;\r\n\tbackground-color: $page-background;\r\n\tpadding-bottom: $safe-area-bottom;\r\n}\r\n\r\n.welcome-section {\r\n\t@include flex-between;\r\n\talign-items: center;\r\n\tpadding: $spacing-lg;\r\n\tbackground: linear-gradient(135deg, $primary-color, $secondary-color);\r\n\tcolor: white;\r\n\t\r\n\t.welcome-content {\r\n\t\tflex: 1;\r\n\t\t\r\n\t\t.welcome-title {\r\n\t\t\tdisplay: block;\r\n\t\t\tfont-size: $font-size-xl;\r\n\t\t\tfont-weight: bold;\r\n\t\t\tmargin-bottom: $spacing-xs;\r\n\t\t}\r\n\t\t\r\n\t\t.welcome-subtitle {\r\n\t\t\tfont-size: $font-size-sm;\r\n\t\t\topacity: 0.9;\r\n\t\t}\r\n\t}\r\n\t\r\n\t.refresh-btn {\r\n\t\t@include flex-center;\r\n\t\tpadding: $spacing-xs $spacing-md;\r\n\t\tbackground-color: rgba(255, 255, 255, 0.2);\r\n\t\tborder-radius: $border-radius-medium;\r\n\t\t\r\n\t\t.refresh-text {\r\n\t\t\tcolor: white;\r\n\t\t\tfont-size: $font-size-sm;\r\n\t\t}\r\n\t\t\r\n\t\t&:active {\r\n\t\t\topacity: 0.7;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.stats-section {\r\n\tpadding: $spacing-lg;\r\n\t\r\n\t.stats-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(2, 1fr);\r\n\t\tgap: $spacing-md;\r\n\t\tmargin-top: $spacing-md;\r\n\t}\r\n}\r\n\r\n.sites-section {\r\n\tpadding: 0 $spacing-lg $spacing-lg;\r\n\t\r\n\t.sites-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(2, 1fr);\r\n\t\tgap: $spacing-sm;\r\n\t\tmargin-top: $spacing-md;\r\n\t}\r\n\t\r\n\t.site-card {\r\n\t\t@include card-style;\r\n\t\t@include flex-between;\r\n\t\talign-items: center;\r\n\t\tpadding: $spacing-md;\r\n\t\ttransition: all 0.3s ease;\r\n\t\t\r\n\t\t&:active {\r\n\t\t\ttransform: scale(0.98);\r\n\t\t}\r\n\t}\r\n\t\r\n\t.site-info {\r\n\t\tflex: 1;\r\n\t\t\r\n\t\t.site-name {\r\n\t\t\tdisplay: block;\r\n\t\t\tfont-size: $font-size-md;\r\n\t\t\tfont-weight: bold;\r\n\t\t\tcolor: $text-primary;\r\n\t\t\tmargin-bottom: 4rpx;\r\n\t\t}\r\n\t\t\r\n\t\t.site-count {\r\n\t\t\tfont-size: $font-size-xs;\r\n\t\t\tcolor: $text-secondary;\r\n\t\t}\r\n\t}\r\n\t\r\n\t.site-trend {\r\n\t\t@include flex-column-center;\r\n\t\t\r\n\t\t.trend-value {\r\n\t\t\tfont-size: $font-size-sm;\r\n\t\t\tfont-weight: bold;\r\n\t\t\tmargin-bottom: 2rpx;\r\n\t\t\t\r\n\t\t\t&.trend-up {\r\n\t\t\t\tcolor: #34C759;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t&.trend-down {\r\n\t\t\t\tcolor: #FF3B30;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t.trend-label {\r\n\t\t\tfont-size: $font-size-xs;\r\n\t\t\tcolor: $text-placeholder;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.hot-rankings-section {\r\n\tpadding: 0 $spacing-lg $spacing-lg;\r\n\t\r\n\t.rankings-scroll {\r\n\t\tmargin-top: $spacing-md;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\t\r\n\t.rankings-list {\r\n\t\t@include flex-center;\r\n\t\tgap: $spacing-sm;\r\n\t\tpadding-bottom: $spacing-xs;\r\n\t}\r\n\t\r\n\t.ranking-item {\r\n\t\t@include card-style;\r\n\t\tposition: relative;\r\n\t\tpadding: $spacing-md;\r\n\t\tmin-width: 200rpx;\r\n\t\ttransition: all 0.3s ease;\r\n\t\t\r\n\t\t&:active {\r\n\t\t\ttransform: scale(0.98);\r\n\t\t}\r\n\t\t\r\n\t\t.ranking-badge {\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: -8rpx;\r\n\t\t\tright: -8rpx;\r\n\t\t\tbackground-color: $accent-color;\r\n\t\t\tcolor: white;\r\n\t\t\tfont-size: $font-size-xs;\r\n\t\t\tpadding: 2rpx 8rpx;\r\n\t\t\tborder-radius: $border-radius-small;\r\n\t\t}\r\n\t\t\r\n\t\t.ranking-name {\r\n\t\t\tdisplay: block;\r\n\t\t\tfont-size: $font-size-md;\r\n\t\t\tfont-weight: bold;\r\n\t\t\tcolor: $text-primary;\r\n\t\t\tmargin-bottom: $spacing-xs;\r\n\t\t\t@include text-ellipsis;\r\n\t\t}\r\n\t\t\r\n\t\t.ranking-desc {\r\n\t\t\tdisplay: block;\r\n\t\t\tfont-size: $font-size-sm;\r\n\t\t\tcolor: $text-secondary;\r\n\t\t\tmargin-bottom: 4rpx;\r\n\t\t}\r\n\t\t\r\n\t\t.ranking-update {\r\n\t\t\tfont-size: $font-size-xs;\r\n\t\t\tcolor: $text-placeholder;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.recent-section {\r\n\tpadding: 0 $spacing-lg $spacing-lg;\r\n\t\r\n\t.recent-list {\r\n\t\tmargin-top: $spacing-md;\r\n\t}\r\n\t\r\n\t.recent-item {\r\n\t\t@include flex-between;\r\n\t\talign-items: center;\r\n\t\tpadding: $spacing-md;\r\n\t\tbackground-color: white;\r\n\t\tborder-radius: $border-radius-medium;\r\n\t\tmargin-bottom: $spacing-sm;\r\n\t\ttransition: all 0.3s ease;\r\n\t\t\r\n\t\t&:active {\r\n\t\t\tbackground-color: $background-color;\r\n\t\t}\r\n\t\t\r\n\t\t&:last-child {\r\n\t\t\tmargin-bottom: 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t.recent-info {\r\n\t\tflex: 1;\r\n\t\t\r\n\t\t.recent-title {\r\n\t\t\tdisplay: block;\r\n\t\t\tfont-size: $font-size-md;\r\n\t\t\tcolor: $text-primary;\r\n\t\t\tmargin-bottom: 4rpx;\r\n\t\t\t@include text-ellipsis;\r\n\t\t}\r\n\t\t\r\n\t\t.recent-subtitle {\r\n\t\t\tfont-size: $font-size-sm;\r\n\t\t\tcolor: $text-secondary;\r\n\t\t\t@include text-ellipsis;\r\n\t\t}\r\n\t}\r\n\t\r\n\t.recent-time {\r\n\t\tmargin-left: $spacing-sm;\r\n\t\t\r\n\t\t.time-text {\r\n\t\t\tfont-size: $font-size-xs;\r\n\t\t\tcolor: $text-placeholder;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.section-title {\r\n\tfont-size: $font-size-lg;\r\n\tfont-weight: bold;\r\n\tcolor: $text-primary;\r\n}\r\n\r\n.section-header {\r\n\t@include flex-between;\r\n\talign-items: center;\r\n\tmargin-bottom: $spacing-md;\r\n\t\r\n\t.section-more {\r\n\t\tfont-size: $font-size-sm;\r\n\t\tcolor: $primary-color;\r\n\t\t\r\n\t\t&:active {\r\n\t\t\topacity: 0.7;\r\n\t\t}\r\n\t}\r\n}\r\n</style>\r\n","import MiniProgramPage from '/Users/guliyu/weixin-miniapp/JJClawler-frontend/JJClawler-frontend/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","getSync","get","setSync"],"mappings":"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"}