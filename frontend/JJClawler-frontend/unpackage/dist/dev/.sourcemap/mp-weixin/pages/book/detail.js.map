{"version":3,"file":"detail.js","sources":["pages/book/detail.vue","pages/book/detail.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"book-detail-page\">\n    <!-- 书籍基本信息 -->\n    <view class=\"book-header\">\n      <view class=\"header-bg\"></view>\n      <view class=\"header-content\">\n        <view class=\"book-cover-section\">\n          <view class=\"book-cover\" v-if=\"bookData.cover\">\n            <image :src=\"bookData.cover\" mode=\"aspectFit\" class=\"cover-image\" />\n          </view>\n          <view class=\"book-cover placeholder\" v-else>\n            <text class=\"cover-text\">📖</text>\n          </view>\n        </view>\n        \n        <view class=\"book-info-section\">\n          <text class=\"book-title\">{{ bookData.title || bookData.name || '书籍详情' }}</text>\n          <text class=\"book-author\" v-if=\"bookData.author\">作者：{{ bookData.author }}</text>\n          <view class=\"book-meta\" v-if=\"bookData.category || bookData.status\">\n            <text class=\"meta-item\" v-if=\"bookData.category\">{{ bookData.category }}</text>\n            <text class=\"meta-divider\" v-if=\"bookData.category && bookData.status\">·</text>\n            <text class=\"meta-item\" v-if=\"bookData.status\">{{ bookData.status }}</text>\n          </view>\n        </view>\n      </view>\n    </view>\n    \n    <!-- 第一层：当前统计数据 -->\n    <view class=\"layer-section current-stats\">\n      <view class=\"layer-header\">\n        <text class=\"layer-title\">📊 当前数据</text>\n      </view>\n      <view class=\"stats-grid\">\n        <view class=\"stat-card\">\n          <text class=\"stat-value\">{{ formatNumber(bookData.currentStats?.collectCount || 0) }}</text>\n          <text class=\"stat-label\">当前收藏量</text>\n        </view>\n        <view class=\"stat-card\">\n          <text class=\"stat-value\">{{ formatNumber(bookData.currentStats?.avgClickPerChapter || 0) }}</text>\n          <text class=\"stat-label\">章均点击量</text>\n        </view>\n      </view>\n    </view>\n    \n    <!-- 第二层：榜单信息 -->\n    <view class=\"layer-section rankings-info\">\n      <view class=\"layer-header\">\n        <text class=\"layer-title\">🏆 榜单排名</text>\n      </view>\n      \n      <view class=\"rankings-list\" v-if=\"bookData.rankings && bookData.rankings.length > 0\">\n        <view class=\"ranking-item\" v-for=\"ranking in bookData.rankings\" :key=\"ranking.id\">\n          <view class=\"ranking-main\">\n            <text class=\"ranking-name\">{{ ranking.name }}</text>\n            <view class=\"ranking-rank\">\n              <text class=\"rank-text\">第{{ ranking.currentRank }}名</text>\n              <view class=\"rank-change\" :class=\"getRankChangeClass(ranking.rankChange)\">\n                <text class=\"change-icon\">{{ getRankChangeIcon(ranking.rankChange) }}</text>\n                <text class=\"change-text\">{{ Math.abs(ranking.rankChange || 0) }}</text>\n              </view>\n            </view>\n          </view>\n          <text class=\"ranking-time\">{{ formatTime(ranking.updateTime) }}</text>\n        </view>\n      </view>\n      \n      <view class=\"empty-state\" v-else>\n        <text class=\"empty-icon\">📋</text>\n        <text class=\"empty-text\">暂无榜单记录</text>\n      </view>\n    </view>\n    \n    <!-- 第三层：历史统计图表 -->\n    <view class=\"layer-section history-stats\">\n      <view class=\"layer-header\">\n        <text class=\"layer-title\">📈 历史统计</text>\n      </view>\n      \n      <!-- Tab切换 -->\n      <view class=\"stats-tabs\">\n        <view \n          class=\"tab-item\" \n          :class=\"{ 'active': activeTab === 'collect' }\"\n          @tap=\"switchTab('collect')\"\n        >\n          <text class=\"tab-text\">收藏量变化</text>\n        </view>\n        <view \n          class=\"tab-item\" \n          :class=\"{ 'active': activeTab === 'click' }\"\n          @tap=\"switchTab('click')\"\n        >\n          <text class=\"tab-text\">点击量变化</text>\n        </view>\n      </view>\n      \n      <!-- 图表区域 -->\n      <view class=\"chart-container\">\n        <view class=\"chart-area\" v-if=\"historyData.length > 0\">\n          <!-- 简单的折线图实现 -->\n          <view class=\"chart-grid\">\n            <view class=\"grid-line\" v-for=\"i in 5\" :key=\"i\"></view>\n          </view>\n          <view class=\"chart-line\">\n            <view \n              class=\"data-point\" \n              v-for=\"(point, index) in chartPoints\" \n              :key=\"index\"\n              :style=\"{ left: point.x + '%', bottom: point.y + '%' }\"\n            >\n              <view class=\"point-dot\"></view>\n              <text class=\"point-value\">{{ point.value }}</text>\n            </view>\n            <!-- 连接线 -->\n            <svg class=\"chart-svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\n              <polyline \n                :points=\"chartLinePoints\" \n                fill=\"none\" \n                stroke=\"#007aff\" \n                stroke-width=\"0.5\"\n              />\n            </svg>\n          </view>\n        </view>\n        \n        <view class=\"empty-chart\" v-else>\n          <text class=\"empty-icon\">📊</text>\n          <text class=\"empty-text\">暂无历史数据</text>\n        </view>\n      </view>\n      \n      <!-- 数据概览 -->\n      <view class=\"stats-summary\" v-if=\"historyData.length > 0\">\n        <view class=\"summary-item\">\n          <text class=\"summary-label\">最高值</text>\n          <text class=\"summary-value\">{{ formatNumber(getMaxValue()) }}</text>\n        </view>\n        <view class=\"summary-item\">\n          <text class=\"summary-label\">最低值</text>\n          <text class=\"summary-value\">{{ formatNumber(getMinValue()) }}</text>\n        </view>\n        <view class=\"summary-item\">\n          <text class=\"summary-label\">平均增长</text>\n          <text class=\"summary-value\">{{ getAverageGrowth() }}</text>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nimport { get } from '@/utils/request.js'\nimport { getSync, setSync } from '@/utils/storage.js'\n\n/**\n * 书籍详情页面 - 三层数据展示\n * @description 第一层：当前统计，第二层：榜单排名，第三层：历史图表\n */\nexport default {\n  name: 'BookDetailPage',\n  \n  data() {\n    return {\n      // 书籍ID\n      bookId: '',\n      \n      // 书籍数据\n      bookData: {\n        title: '',\n        author: '',\n        cover: '',\n        category: '',\n        status: '',\n        currentStats: {\n          collectCount: 0,\n          avgClickPerChapter: 0\n        },\n        rankings: []\n      },\n      \n      // 当前选中的tab\n      activeTab: 'collect', // 'collect' | 'click'\n      \n      // 历史数据\n      historyStats: {\n        dates: [],\n        collectHistory: [],\n        clickHistory: []\n      },\n      \n      // 加载状态\n      loading: false\n    }\n  },\n  \n  computed: {\n    /**\n     * 当前显示的历史数据\n     */\n    historyData() {\n      if (this.activeTab === 'collect') {\n        return this.historyStats.collectHistory || []\n      } else {\n        return this.historyStats.clickHistory || []\n      }\n    },\n    \n    /**\n     * 图表点位数据\n     */\n    chartPoints() {\n      if (this.historyData.length === 0) return []\n      \n      const maxValue = Math.max(...this.historyData)\n      const minValue = Math.min(...this.historyData)\n      const range = maxValue - minValue || 1\n      \n      return this.historyData.map((value, index) => ({\n        x: (index / (this.historyData.length - 1)) * 100,\n        y: ((value - minValue) / range) * 80 + 10,\n        value: this.formatNumber(value)\n      }))\n    },\n    \n    /**\n     * 图表连接线点位\n     */\n    chartLinePoints() {\n      return this.chartPoints.map(point => `${point.x},${100 - point.y}`).join(' ')\n    }\n  },\n  \n  onLoad(options) {\n    if (options.id) {\n      this.bookId = options.id\n      this.initData()\n    }\n  },\n  \n  // 下拉刷新\n  onPullDownRefresh() {\n    this.refreshData().finally(() => {\n      uni.stopPullDownRefresh()\n    })\n  },\n  \n  methods: {\n    /**\n     * 初始化数据\n     */\n    async initData() {\n      this.loading = true\n      \n      try {\n        // 加载缓存数据\n        this.loadCachedData()\n        \n        // 获取最新数据\n        await Promise.all([\n          this.fetchBookInfo(),\n          this.fetchHistoryStats()\n        ])\n      } catch (error) {\n        console.error('初始化数据失败:', error)\n        this.showError('数据加载失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    /**\n     * 加载缓存数据\n     */\n    loadCachedData() {\n      const cachedBook = getSync(`book_detail_${this.bookId}`)\n      const cachedHistory = getSync(`book_history_${this.bookId}`)\n      \n      if (cachedBook) {\n        this.bookData = { ...this.bookData, ...cachedBook }\n      }\n      \n      if (cachedHistory) {\n        this.historyStats = cachedHistory\n      }\n    },\n    \n    /**\n     * 获取书籍详细信息\n     */\n    async fetchBookInfo() {\n      try {\n        // 模拟API调用，实际应调用真实接口\n        const data = await this.getMockBookData()\n        \n        this.bookData = { ...this.bookData, ...data }\n        setSync(`book_detail_${this.bookId}`, data, 30 * 60 * 1000) // 缓存30分钟\n      } catch (error) {\n        console.error('获取书籍信息失败:', error)\n        throw error\n      }\n    },\n    \n    /**\n     * 获取历史统计数据\n     */\n    async fetchHistoryStats() {\n      try {\n        // 模拟API调用，实际应调用真实接口\n        const data = await this.getMockHistoryData()\n        \n        this.historyStats = data\n        setSync(`book_history_${this.bookId}`, data, 15 * 60 * 1000) // 缓存15分钟\n      } catch (error) {\n        console.error('获取历史数据失败:', error)\n        throw error\n      }\n    },\n    \n    /**\n     * 获取模拟书籍数据\n     */\n    async getMockBookData() {\n      // 模拟网络延迟\n      await new Promise(resolve => setTimeout(resolve, 500))\n      \n      return {\n        title: '霸道总裁的小娇妻',\n        author: '言情作家',\n        cover: '',\n        category: '现代言情',\n        status: '连载中',\n        currentStats: {\n          collectCount: 125847,\n          avgClickPerChapter: 2156\n        },\n        rankings: [\n          {\n            id: 'ranking1',\n            name: '言情总榜',\n            currentRank: 15,\n            rankChange: -2,\n            updateTime: '2024-01-15T10:30:00'\n          },\n          {\n            id: 'ranking2', \n            name: '新书榜',\n            currentRank: 8,\n            rankChange: 3,\n            updateTime: '2024-01-15T10:30:00'\n          },\n          {\n            id: 'ranking3',\n            name: '收藏榜',\n            currentRank: 22,\n            rankChange: 0,\n            updateTime: '2024-01-15T10:30:00'\n          }\n        ]\n      }\n    },\n    \n    /**\n     * 获取模拟历史数据\n     */\n    async getMockHistoryData() {\n      // 模拟网络延迟\n      await new Promise(resolve => setTimeout(resolve, 300))\n      \n      // 生成30天的模拟数据\n      const dates = []\n      const collectHistory = []\n      const clickHistory = []\n      \n      const now = new Date()\n      for (let i = 29; i >= 0; i--) {\n        const date = new Date(now)\n        date.setDate(date.getDate() - i)\n        dates.push(date.toISOString().split('T')[0])\n        \n        // 模拟收藏量增长（有波动）\n        const baseCollect = 120000 + i * 200\n        const collectVariation = Math.random() * 1000 - 500\n        collectHistory.push(Math.max(0, Math.floor(baseCollect + collectVariation)))\n        \n        // 模拟点击量增长\n        const baseClick = 2000000 + i * 5000\n        const clickVariation = Math.random() * 10000 - 5000\n        clickHistory.push(Math.max(0, Math.floor(baseClick + clickVariation)))\n      }\n      \n      return {\n        dates,\n        collectHistory,\n        clickHistory\n      }\n    },\n    \n    /**\n     * 刷新数据\n     */\n    async refreshData() {\n      try {\n        await Promise.all([\n          this.fetchBookInfo(),\n          this.fetchHistoryStats()\n        ])\n        \n        uni.showToast({\n          title: '刷新成功',\n          icon: 'success',\n          duration: 1500\n        })\n      } catch (error) {\n        this.showError('刷新失败')\n      }\n    },\n    \n    /**\n     * 切换统计Tab\n     */\n    switchTab(tab) {\n      this.activeTab = tab\n    },\n    \n    /**\n     * 获取排名变化样式类\n     */\n    getRankChangeClass(change) {\n      if (!change || change === 0) return 'no-change'\n      return change > 0 ? 'rank-up' : 'rank-down'\n    },\n    \n    /**\n     * 获取排名变化图标\n     */\n    getRankChangeIcon(change) {\n      if (!change || change === 0) return '—'\n      return change > 0 ? '↗' : '↘'\n    },\n    \n    /**\n     * 获取最大值\n     */\n    getMaxValue() {\n      return Math.max(...this.historyData)\n    },\n    \n    /**\n     * 获取最小值\n     */\n    getMinValue() {\n      return Math.min(...this.historyData)\n    },\n    \n    /**\n     * 获取平均增长\n     */\n    getAverageGrowth() {\n      if (this.historyData.length < 2) return '0%'\n      \n      const first = this.historyData[0]\n      const last = this.historyData[this.historyData.length - 1]\n      const growth = ((last - first) / first * 100).toFixed(1)\n      \n      return growth > 0 ? `+${growth}%` : `${growth}%`\n    },\n    \n    /**\n     * 格式化数字\n     */\n    formatNumber(num) {\n      if (typeof num !== 'number') return num || '0'\n      \n      if (num >= 10000) {\n        return (num / 10000).toFixed(1) + '万'\n      } else if (num >= 1000) {\n        return (num / 1000).toFixed(1) + 'k'\n      }\n      \n      return num.toString()\n    },\n    \n    /**\n     * 格式化时间\n     */\n    formatTime(time) {\n      if (!time) return '未知'\n      \n      const now = new Date()\n      const updateTime = new Date(time)\n      const diff = now - updateTime\n      \n      const hours = Math.floor(diff / (1000 * 60 * 60))\n      const days = Math.floor(diff / (1000 * 60 * 60 * 24))\n      \n      if (hours < 24) {\n        return `${hours}小时前`\n      } else if (days < 7) {\n        return `${days}天前`\n      } else {\n        return updateTime.toLocaleDateString()\n      }\n    },\n    \n    /**\n     * 显示错误提示\n     */\n    showError(message) {\n      uni.showToast({\n        title: message,\n        icon: 'none',\n        duration: 2000\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.book-detail-page {\n  min-height: 100vh;\n  background-color: $page-background;\n  padding-bottom: $safe-area-bottom;\n}\n\n// 书籍头部信息\n.book-header {\n  position: relative;\n  padding: $spacing-lg;\n  color: white;\n  overflow: hidden;\n  \n  .header-bg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(135deg, $primary-color, $secondary-color);\n    z-index: -1;\n  }\n  \n  .header-content {\n    @include flex-center;\n    align-items: flex-start;\n    gap: $spacing-lg;\n  }\n  \n  .book-cover-section {\n    flex-shrink: 0;\n    \n    .book-cover {\n      width: 160rpx;\n      height: 220rpx;\n      border-radius: $border-radius-medium;\n      overflow: hidden;\n      background-color: rgba(255, 255, 255, 0.1);\n      @include flex-center;\n      \n      .cover-image {\n        width: 100%;\n        height: 100%;\n      }\n      \n      &.placeholder {\n        .cover-text {\n          font-size: 50rpx;\n          opacity: 0.7;\n        }\n      }\n    }\n  }\n  \n  .book-info-section {\n    flex: 1;\n    \n    .book-title {\n      display: block;\n      font-size: $font-size-xl;\n      font-weight: bold;\n      margin-bottom: $spacing-xs;\n      line-height: 1.3;\n    }\n    \n    .book-author {\n      display: block;\n      font-size: $font-size-sm;\n      opacity: 0.9;\n      margin-bottom: $spacing-xs;\n    }\n    \n    .book-meta {\n      @include flex-center;\n      gap: $spacing-xs;\n      \n      .meta-item {\n        font-size: $font-size-xs;\n        opacity: 0.8;\n      }\n      \n      .meta-divider {\n        opacity: 0.6;\n      }\n    }\n  }\n}\n\n// 层级区域通用样式\n.layer-section {\n  background-color: white;\n  margin-bottom: $spacing-sm;\n  padding: $spacing-lg;\n  \n  .layer-header {\n    margin-bottom: $spacing-lg;\n    \n    .layer-title {\n      font-size: $font-size-lg;\n      font-weight: bold;\n      color: $text-primary;\n    }\n  }\n}\n\n// 第一层：当前统计\n.current-stats {\n  .stats-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: $spacing-lg;\n    \n    .stat-card {\n      @include flex-column-center;\n      padding: $spacing-lg;\n      background: linear-gradient(135deg, #f8f9ff, #e8f0ff);\n      border-radius: $border-radius-large;\n      border: 2rpx solid $border-light;\n      \n      .stat-value {\n        font-size: $font-size-xxl;\n        font-weight: bold;\n        color: $primary-color;\n        margin-bottom: $spacing-xs;\n      }\n      \n      .stat-label {\n        font-size: $font-size-sm;\n        color: $text-secondary;\n        text-align: center;\n      }\n    }\n  }\n}\n\n// 第二层：榜单信息\n.rankings-info {\n  .rankings-list {\n    .ranking-item {\n      padding: $spacing-lg;\n      border: 2rpx solid $border-light;\n      border-radius: $border-radius-medium;\n      margin-bottom: $spacing-md;\n      \n      &:last-child {\n        margin-bottom: 0;\n      }\n      \n      .ranking-main {\n        @include flex-between;\n        align-items: center;\n        margin-bottom: $spacing-xs;\n        \n        .ranking-name {\n          font-size: $font-size-md;\n          font-weight: bold;\n          color: $text-primary;\n        }\n        \n        .ranking-rank {\n          @include flex-center;\n          gap: $spacing-sm;\n          \n          .rank-text {\n            font-size: $font-size-md;\n            color: $primary-color;\n            font-weight: bold;\n          }\n          \n          .rank-change {\n            @include flex-center;\n            gap: 4rpx;\n            padding: 4rpx $spacing-xs;\n            border-radius: $border-radius-small;\n            \n            .change-icon {\n              font-size: $font-size-sm;\n            }\n            \n            .change-text {\n              font-size: $font-size-xs;\n            }\n            \n            &.rank-up {\n              background-color: #e8f5e8;\n              color: #22c55e;\n            }\n            \n            &.rank-down {\n              background-color: #fef2f2;\n              color: #ef4444;\n            }\n            \n            &.no-change {\n              background-color: $background-color;\n              color: $text-placeholder;\n            }\n          }\n        }\n      }\n      \n      .ranking-time {\n        font-size: $font-size-xs;\n        color: $text-placeholder;\n      }\n    }\n  }\n}\n\n// 第三层：历史统计\n.history-stats {\n  .stats-tabs {\n    @include flex-center;\n    background-color: $background-color;\n    border-radius: $border-radius-medium;\n    padding: 6rpx;\n    margin-bottom: $spacing-lg;\n    \n    .tab-item {\n      flex: 1;\n      @include flex-center;\n      padding: $spacing-sm;\n      border-radius: $border-radius-small;\n      transition: all 0.3s ease;\n      \n      .tab-text {\n        font-size: $font-size-sm;\n        color: $text-secondary;\n      }\n      \n      &.active {\n        background-color: white;\n        box-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.1);\n        \n        .tab-text {\n          color: $primary-color;\n          font-weight: bold;\n        }\n      }\n    }\n  }\n  \n  .chart-container {\n    margin-bottom: $spacing-lg;\n    \n    .chart-area {\n      position: relative;\n      height: 400rpx;\n      background-color: #fafbfc;\n      border-radius: $border-radius-medium;\n      padding: $spacing-lg;\n      overflow: hidden;\n      \n      .chart-grid {\n        position: absolute;\n        top: $spacing-lg;\n        left: $spacing-lg;\n        right: $spacing-lg;\n        bottom: $spacing-lg;\n        \n        .grid-line {\n          position: absolute;\n          left: 0;\n          right: 0;\n          height: 2rpx;\n          background-color: #e5e7eb;\n          \n          &:nth-child(1) { top: 0; }\n          &:nth-child(2) { top: 25%; }\n          &:nth-child(3) { top: 50%; }\n          &:nth-child(4) { top: 75%; }\n          &:nth-child(5) { bottom: 0; }\n        }\n      }\n      \n      .chart-line {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        \n        .chart-svg {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n        }\n        \n        .data-point {\n          position: absolute;\n          transform: translate(-50%, 50%);\n          \n          .point-dot {\n            width: 12rpx;\n            height: 12rpx;\n            background-color: $primary-color;\n            border-radius: 50%;\n            margin: 0 auto;\n          }\n          \n          .point-value {\n            display: block;\n            font-size: $font-size-xs;\n            color: $text-secondary;\n            text-align: center;\n            margin-top: 8rpx;\n            white-space: nowrap;\n          }\n        }\n      }\n    }\n    \n    .empty-chart {\n      @include flex-column-center;\n      height: 400rpx;\n      background-color: #fafbfc;\n      border-radius: $border-radius-medium;\n      \n      .empty-icon {\n        font-size: 80rpx;\n        margin-bottom: $spacing-md;\n      }\n      \n      .empty-text {\n        color: $text-placeholder;\n        font-size: $font-size-md;\n      }\n    }\n  }\n  \n  .stats-summary {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: $spacing-md;\n    \n    .summary-item {\n      @include flex-column-center;\n      padding: $spacing-md;\n      background-color: $background-color;\n      border-radius: $border-radius-medium;\n      \n      .summary-label {\n        font-size: $font-size-xs;\n        color: $text-secondary;\n        margin-bottom: 4rpx;\n      }\n      \n      .summary-value {\n        font-size: $font-size-md;\n        font-weight: bold;\n        color: $text-primary;\n      }\n    }\n  }\n}\n\n// 空状态样式\n.empty-state {\n  @include flex-column-center;\n  padding: $spacing-xl;\n  \n  .empty-icon {\n    font-size: 80rpx;\n    margin-bottom: $spacing-md;\n  }\n  \n  .empty-text {\n    color: $text-placeholder;\n    font-size: $font-size-md;\n  }\n}\n</style>\n","import MiniProgramPage from '/Users/guliyu/weixin-miniapp/JJClawler-frontend/JJClawler-frontend/pages/book/detail.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","getSync","setSync"],"mappings":";;;AA8JA,MAAK,YAAU;AAAA,EACb,MAAM;AAAA,EAEN,OAAO;AACL,WAAO;AAAA;AAAA,MAEL,QAAQ;AAAA;AAAA,MAGR,UAAU;AAAA,QACR,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,cAAc;AAAA,UACZ,cAAc;AAAA,UACd,oBAAoB;AAAA,QACrB;AAAA,QACD,UAAU,CAAC;AAAA,MACZ;AAAA;AAAA,MAGD,WAAW;AAAA;AAAA;AAAA,MAGX,cAAc;AAAA,QACZ,OAAO,CAAE;AAAA,QACT,gBAAgB,CAAE;AAAA,QAClB,cAAc,CAAC;AAAA,MAChB;AAAA;AAAA,MAGD,SAAS;AAAA,IACX;AAAA,EACD;AAAA,EAED,UAAU;AAAA;AAAA;AAAA;AAAA,IAIR,cAAc;AACZ,UAAI,KAAK,cAAc,WAAW;AAChC,eAAO,KAAK,aAAa,kBAAkB,CAAC;AAAA,aACvC;AACL,eAAO,KAAK,aAAa,gBAAgB,CAAC;AAAA,MAC5C;AAAA,IACD;AAAA;AAAA;AAAA;AAAA,IAKD,cAAc;AACZ,UAAI,KAAK,YAAY,WAAW;AAAG,eAAO,CAAC;AAE3C,YAAM,WAAW,KAAK,IAAI,GAAG,KAAK,WAAW;AAC7C,YAAM,WAAW,KAAK,IAAI,GAAG,KAAK,WAAW;AAC7C,YAAM,QAAQ,WAAW,YAAY;AAErC,aAAO,KAAK,YAAY,IAAI,CAAC,OAAO,WAAW;AAAA,QAC7C,GAAI,SAAS,KAAK,YAAY,SAAS,KAAM;AAAA,QAC7C,IAAK,QAAQ,YAAY,QAAS,KAAK;AAAA,QACvC,OAAO,KAAK,aAAa,KAAK;AAAA,MAChC,EAAE;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKD,kBAAkB;AAChB,aAAO,KAAK,YAAY,IAAI,WAAS,GAAG,MAAM,CAAC,IAAI,MAAM,MAAM,CAAC,EAAE,EAAE,KAAK,GAAG;AAAA,IAC9E;AAAA,EACD;AAAA,EAED,OAAO,SAAS;AACd,QAAI,QAAQ,IAAI;AACd,WAAK,SAAS,QAAQ;AACtB,WAAK,SAAS;AAAA,IAChB;AAAA,EACD;AAAA;AAAA,EAGD,oBAAoB;AAClB,SAAK,cAAc,QAAQ,MAAM;AAC/BA,oBAAAA,MAAI,oBAAoB;AAAA,KACzB;AAAA,EACF;AAAA,EAED,SAAS;AAAA;AAAA;AAAA;AAAA,IAIP,MAAM,WAAW;AACf,WAAK,UAAU;AAEf,UAAI;AAEF,aAAK,eAAe;AAGpB,cAAM,QAAQ,IAAI;AAAA,UAChB,KAAK,cAAe;AAAA,UACpB,KAAK,kBAAkB;AAAA,SACxB;AAAA,MACD,SAAO,OAAO;AACdA,sBAAAA,MAAA,MAAA,SAAA,gCAAc,YAAY,KAAK;AAC/B,aAAK,UAAU,QAAQ;AAAA,MACzB,UAAU;AACR,aAAK,UAAU;AAAA,MACjB;AAAA,IACD;AAAA;AAAA;AAAA;AAAA,IAKD,iBAAiB;AACf,YAAM,aAAaC,cAAAA,QAAQ,eAAe,KAAK,MAAM,EAAE;AACvD,YAAM,gBAAgBA,cAAAA,QAAQ,gBAAgB,KAAK,MAAM,EAAE;AAE3D,UAAI,YAAY;AACd,aAAK,WAAW,EAAE,GAAG,KAAK,UAAU,GAAG,WAAW;AAAA,MACpD;AAEA,UAAI,eAAe;AACjB,aAAK,eAAe;AAAA,MACtB;AAAA,IACD;AAAA;AAAA;AAAA;AAAA,IAKD,MAAM,gBAAgB;AACpB,UAAI;AAEF,cAAM,OAAO,MAAM,KAAK,gBAAgB;AAExC,aAAK,WAAW,EAAE,GAAG,KAAK,UAAU,GAAG,KAAK;AAC5CC,8BAAQ,eAAe,KAAK,MAAM,IAAI,MAAM,KAAK,KAAK,GAAI;AAAA,MAC1D,SAAO,OAAO;AACdF,sBAAAA,MAAc,MAAA,SAAA,gCAAA,aAAa,KAAK;AAChC,cAAM;AAAA,MACR;AAAA,IACD;AAAA;AAAA;AAAA;AAAA,IAKD,MAAM,oBAAoB;AACxB,UAAI;AAEF,cAAM,OAAO,MAAM,KAAK,mBAAmB;AAE3C,aAAK,eAAe;AACpBE,8BAAQ,gBAAgB,KAAK,MAAM,IAAI,MAAM,KAAK,KAAK,GAAI;AAAA,MAC3D,SAAO,OAAO;AACdF,sBAAAA,MAAc,MAAA,SAAA,gCAAA,aAAa,KAAK;AAChC,cAAM;AAAA,MACR;AAAA,IACD;AAAA;AAAA;AAAA;AAAA,IAKD,MAAM,kBAAkB;AAEtB,YAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,GAAG,CAAC;AAErD,aAAO;AAAA,QACL,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,cAAc;AAAA,UACZ,cAAc;AAAA,UACd,oBAAoB;AAAA,QACrB;AAAA,QACD,UAAU;AAAA,UACR;AAAA,YACE,IAAI;AAAA,YACJ,MAAM;AAAA,YACN,aAAa;AAAA,YACb,YAAY;AAAA,YACZ,YAAY;AAAA,UACb;AAAA,UACD;AAAA,YACE,IAAI;AAAA,YACJ,MAAM;AAAA,YACN,aAAa;AAAA,YACb,YAAY;AAAA,YACZ,YAAY;AAAA,UACb;AAAA,UACD;AAAA,YACE,IAAI;AAAA,YACJ,MAAM;AAAA,YACN,aAAa;AAAA,YACb,YAAY;AAAA,YACZ,YAAY;AAAA,UACd;AAAA,QACF;AAAA,MACF;AAAA,IACD;AAAA;AAAA;AAAA;AAAA,IAKD,MAAM,qBAAqB;AAEzB,YAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,GAAG,CAAC;AAGrD,YAAM,QAAQ,CAAC;AACf,YAAM,iBAAiB,CAAC;AACxB,YAAM,eAAe,CAAC;AAEtB,YAAM,MAAM,oBAAI,KAAK;AACrB,eAAS,IAAI,IAAI,KAAK,GAAG,KAAK;AAC5B,cAAM,OAAO,IAAI,KAAK,GAAG;AACzB,aAAK,QAAQ,KAAK,QAAO,IAAK,CAAC;AAC/B,cAAM,KAAK,KAAK,YAAW,EAAG,MAAM,GAAG,EAAE,CAAC,CAAC;AAG3C,cAAM,cAAc,OAAS,IAAI;AACjC,cAAM,mBAAmB,KAAK,OAAO,IAAI,MAAO;AAChD,uBAAe,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM,cAAc,gBAAgB,CAAC,CAAC;AAG3E,cAAM,YAAY,MAAU,IAAI;AAChC,cAAM,iBAAiB,KAAK,WAAW,MAAQ;AAC/C,qBAAa,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM,YAAY,cAAc,CAAC,CAAC;AAAA,MACvE;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACD;AAAA;AAAA;AAAA;AAAA,IAKD,MAAM,cAAc;AAClB,UAAI;AACF,cAAM,QAAQ,IAAI;AAAA,UAChB,KAAK,cAAe;AAAA,UACpB,KAAK,kBAAkB;AAAA,SACxB;AAEDA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,UACN,UAAU;AAAA,SACX;AAAA,MACD,SAAO,OAAO;AACd,aAAK,UAAU,MAAM;AAAA,MACvB;AAAA,IACD;AAAA;AAAA;AAAA;AAAA,IAKD,UAAU,KAAK;AACb,WAAK,YAAY;AAAA,IAClB;AAAA;AAAA;AAAA;AAAA,IAKD,mBAAmB,QAAQ;AACzB,UAAI,CAAC,UAAU,WAAW;AAAG,eAAO;AACpC,aAAO,SAAS,IAAI,YAAY;AAAA,IACjC;AAAA;AAAA;AAAA;AAAA,IAKD,kBAAkB,QAAQ;AACxB,UAAI,CAAC,UAAU,WAAW;AAAG,eAAO;AACpC,aAAO,SAAS,IAAI,MAAM;AAAA,IAC3B;AAAA;AAAA;AAAA;AAAA,IAKD,cAAc;AACZ,aAAO,KAAK,IAAI,GAAG,KAAK,WAAW;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA,IAKD,cAAc;AACZ,aAAO,KAAK,IAAI,GAAG,KAAK,WAAW;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA,IAKD,mBAAmB;AACjB,UAAI,KAAK,YAAY,SAAS;AAAG,eAAO;AAExC,YAAM,QAAQ,KAAK,YAAY,CAAC;AAChC,YAAM,OAAO,KAAK,YAAY,KAAK,YAAY,SAAS,CAAC;AACzD,YAAM,WAAW,OAAO,SAAS,QAAQ,KAAK,QAAQ,CAAC;AAEvD,aAAO,SAAS,IAAI,IAAI,MAAM,MAAM,GAAG,MAAM;AAAA,IAC9C;AAAA;AAAA;AAAA;AAAA,IAKD,aAAa,KAAK;AAChB,UAAI,OAAO,QAAQ;AAAU,eAAO,OAAO;AAE3C,UAAI,OAAO,KAAO;AAChB,gBAAQ,MAAM,KAAO,QAAQ,CAAC,IAAI;AAAA,MACpC,WAAW,OAAO,KAAM;AACtB,gBAAQ,MAAM,KAAM,QAAQ,CAAC,IAAI;AAAA,MACnC;AAEA,aAAO,IAAI,SAAS;AAAA,IACrB;AAAA;AAAA;AAAA;AAAA,IAKD,WAAW,MAAM;AACf,UAAI,CAAC;AAAM,eAAO;AAElB,YAAM,MAAM,oBAAI,KAAK;AACrB,YAAM,aAAa,IAAI,KAAK,IAAI;AAChC,YAAM,OAAO,MAAM;AAEnB,YAAM,QAAQ,KAAK,MAAM,QAAQ,MAAO,KAAK,GAAG;AAChD,YAAM,OAAO,KAAK,MAAM,QAAQ,MAAO,KAAK,KAAK,GAAG;AAEpD,UAAI,QAAQ,IAAI;AACd,eAAO,GAAG,KAAK;AAAA,MACjB,WAAW,OAAO,GAAG;AACnB,eAAO,GAAG,IAAI;AAAA,aACT;AACL,eAAO,WAAW,mBAAmB;AAAA,MACvC;AAAA,IACD;AAAA;AAAA;AAAA;AAAA,IAKD,UAAU,SAAS;AACjBA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,MAAM;AAAA,QACN,UAAU;AAAA,OACX;AAAA,IACH;AAAA,EACF;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClgBA,GAAG,WAAW,eAAe;"}